name: Main Deployment Pipeline

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  validate-env:
    name: Load and Validate Environment Variables
    runs-on: ubuntu-latest
    steps:
      - name: Check environment variables
        run: |
          echo "RDS_ENDPOINT=${{ secrets.RDS_ENDPOINT }}"
          echo "RDS_PORT=${{ secrets.RDS_PORT }}"
          echo "RDS_DATABASE=${{ secrets.RDS_DATABASE }}"
          echo "RDS_USERNAME=${{ secrets.RDS_USERNAME }}"
          echo "RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}"
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}"
          echo "APP_PORT=${{ secrets.APP_PORT }}"
          echo "VERCEL_TOKEN=${{ secrets.VERCEL_TOKEN }}"
          echo "SWAGGER_PATH=${{ secrets.SWAGGER_PATH }}"

  sonarcloud:
    name: SonarCloud Code Analysis
    runs-on: ubuntu-latest
    needs: validate-env
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: yarn install

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=thegreatjordach
            -Dsonar.projectKey=TheGreatJordach_Todo-List-APP
            -Dsonar.sources=src/
            -Dsonar.test.exclusions=**/*.spec.ts
            -Dsonar.tests=src/
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  configure_aws:
    name: Configure AWS Credentials
    runs-on: ubuntu-latest
    needs: validate-env
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: your-aws-region # e.g., us-east-1

  deploy_to_rds:
    name: Deploy to AWS RDS
    runs-on: ubuntu-latest
    needs: [validate-env, configure_aws, sonarcloud]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Specify your Node.js version

      - name: Install dependencies
        run: yarn install

      - name: Run Database Migrations
        env:
          DATABASE_URL: "postgresql://${{ secrets.RDS_USERNAME }}:${{ secrets.RDS_PASSWORD }}@${{ secrets.RDS_ENDPOINT }}:${{ secrets.RDS_PORT }}/${{ secrets.RDS_DATABASE }}"
        run: |
          # Test database connection
          PGPASSWORD=${{ secrets.RDS_PASSWORD }} psql -h ${{ secrets.RDS_ENDPOINT }} -p ${{ secrets.RDS_PORT }} -U ${{ secrets.RDS_USERNAME }} -d ${{ secrets.RDS_DATABASE }} -c '\q'
          if [ $? -ne 0 ]; then
            echo "Cannot connect to the AWS RDS database. Please check the connection settings."
            exit 1
          fi

          # Run the migration
          yarn run db:migrate

  deploy_to_vercel:
    name: Deploy to Vercel
    needs: deploy_to_rds
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./ # Update as necessary

  build:
    # STEP-4: if Deploy to Vercel Ok, then Deploy the docs
    name: Build Documentation
    runs-on: ubuntu-latest
    needs: deploy_to_vercel
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: yarn install

      - name: Generate documentation
        run: yarn run docs

      - name: Deploy documentation
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
