var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppConfigModule.html",[0,0.956,1,2.029]],["body/modules/AppConfigModule.html",[0,1.373,1,2.915,2,1.588,3,0.353,4,0.314,5,0.314,6,3.663,7,0.785,8,0.028,9,2.711,10,3.663,11,1.038,12,4.088,13,2.711,14,3.663,15,3.089,16,3.089,17,4.849,18,3.089,19,2.711,20,2.428,21,2.711,22,3.663,23,3.663,24,2.541,25,3.663,26,3.663,27,3.663,28,2.428,29,3.089,30,2.202,31,2.666,32,5.784,33,1.817,34,3.663,35,5.435,36,3.663,37,3.663,38,4.088,39,2.428,40,3.663,41,3.663,42,1.475,43,3.663,44,3.663,45,2.202,46,3.663,47,3.663,48,1.588,49,3.663,50,0.353,51,0.089,52,0.019,53,0.019]],["title/modules/AppModule.html",[0,0.956,54,2.237]],["body/modules/AppModule.html",[0,1.527,1,3.7,2,1.563,3,0.347,4,0.309,5,0.309,7,0.803,8,0.027,11,1.021,28,3.18,45,2.884,50,0.347,51,0.088,52,0.019,53,0.019,54,4.438,55,1.983,56,2.39,57,2.39,58,1.983,59,2.39,60,3.04,61,3.04,62,3.7,63,3.7,64,3.7,65,3.7,66,3.18,67,2.39,68,2.168,69,3.605,70,3.605,71,3.605,72,3.605,73,3.605,74,3.605,75,1.824]],["title/classes/BaseTodoDto.html",[51,0.082,76,2.029]],["body/classes/BaseTodoDto.html",[3,0.195,4,0.173,5,0.173,7,0.685,8,0.027,24,2.048,50,0.195,51,0.094,52,0.012,53,0.012,76,1.895,77,0.658,78,4.584,79,1.339,80,0.369,81,1.026,82,2.771,83,2.457,84,1.528,85,2.658,86,2.868,87,2.408,88,3.335,89,1.453,90,2.902,91,1.139,92,1.098,93,1.711,94,3.483,95,2.216,96,3.692,97,3.603,98,3.359,99,3.24,100,2.333,101,2.333,102,2.333,103,1.704,104,1.704,105,2.658,106,1.118,107,2.02,108,2.767,109,2.658,110,1.82,111,3.434,112,2.611,113,2.658,114,2.333,115,1.704,116,2.02,117,2.569,118,2.658,119,1.495,120,1.704,121,2.02,122,2.089,123,1.704,124,2.02,125,1.704,126,2.02,127,2.403,128,2.333,129,1.704,130,2.02,131,2.633,132,1.022,133,1.339,134,1.704,135,1.704,136,2.02,137,2.132,138,1.495,139,1.111,140,1.022,141,4.584,142,1.022,143,2.02,144,4.004,145,2.658,146,1.215,147,1.339,148,2.02,149,1.215,150,1.704,151,1.704,152,2.02,153,1.022,154,2.02,155,1.704,156,2.02,157,3.876,158,2.02,159,2.02,160,2.02,161,2.02,162,2.02,163,4.379,164,2.02,165,2.02,166,2.02,167,2.02,168,2.02,169,2.02,170,2.02,171,2.02,172,2.02,173,2.02,174,2.02,175,2.02,176,2.02,177,2.02,178,1.704,179,2.02]],["title/classes/BaseUserDto.html",[51,0.082,127,1.708]],["body/classes/BaseUserDto.html",[3,0.292,4,0.26,5,0.26,7,0.735,8,0.027,24,1.42,50,0.292,51,0.12,52,0.017,53,0.017,77,0.989,80,0.555,81,1.389,82,2.699,83,1.995,84,1.624,89,2.005,91,1.097,92,1.515,93,1.742,94,2.827,97,3.216,98,2.565,106,1.138,110,1.711,112,2.941,127,2.159,132,2.159,137,2.941,138,2.247,139,1.67,140,1.536,141,4.158,142,1.536,144,4.158,145,2.56,146,1.826,147,2.013,178,2.56,180,4.751,181,2.013,182,2.827,183,1.742,184,3.958,185,2.565,186,2.56,187,3.036,188,3.036,189,2.827,190,3.597,191,2.565,192,2.346,193,2.56,194,3.036,195,3.156,196,2.56,197,3.036,198,4.266,199,4.266,200,2.013,201,2.56,202,2.56,203,3.036,204,3.036,205,3.036,206,3.036]],["title/classes/CreateTodoDto.html",[51,0.082,207,2.029]],["body/classes/CreateTodoDto.html",[3,0.263,4,0.234,5,0.234,7,0.357,8,0.026,24,1.852,50,0.263,51,0.066,52,0.016,53,0.016,76,3.709,77,0.891,79,1.814,80,0.5,81,1.29,82,2.785,83,2.177,84,1.714,85,3.34,86,3.444,87,2.806,88,3.382,89,1.745,90,3.085,91,1.128,92,1.122,93,1.895,94,3.858,95,2.004,96,3.34,97,3.709,98,3.255,99,2.931,100,2.025,101,2.025,102,2.025,103,2.307,104,2.307,105,3.34,106,1.238,108,2.56,109,2.307,110,1.768,111,3.255,112,2.806,113,2.307,114,2.025,115,2.307,117,2.625,118,2.307,119,2.025,120,2.307,122,1.814,123,2.307,125,2.307,127,2.004,128,2.025,129,2.307,131,1.645,132,1.385,133,1.814,134,2.307,135,2.307,207,2.381,208,2.307,209,2.625,210,4.908,211,2.736,212,2.736,213,2.736,214,2.736,215,2.736,216,2.736,217,2.736,218,1.814,219,1.814]],["title/classes/CreateUserDto.html",[51,0.082,220,2.029]],["body/classes/CreateUserDto.html",[3,0.282,4,0.251,5,0.251,7,0.543,8,0.027,24,1.372,33,1.561,50,0.282,51,0.101,52,0.016,53,0.016,77,0.955,80,0.536,81,1.356,82,2.678,84,1.6,89,1.561,91,1.056,92,1.575,93,1.811,94,2.76,97,2.503,98,2.91,106,1.183,110,1.265,112,2.29,127,3.007,132,1.485,137,1.614,146,1.764,149,1.764,181,1.945,182,2.76,183,1.576,184,3.581,185,2.503,186,2.474,189,1.945,190,2.474,191,1.764,192,1.614,193,2.474,195,2.171,196,2.474,209,2.76,210,4.442,218,1.945,220,2.503,221,3.511,222,4.116,223,2.934,224,5.268,225,4.164,226,4.493,227,4.164,228,4.164,229,4.164,230,2.76,231,4.164,232,4.164,233,3.511,234,4.164,235,4.164,236,4.164,237,4.164,238,4.164,239,2.934,240,2.934,241,2.934,242,2.934,243,2.934,244,4.164,245,2.934]],["title/modules/DatabaseModule.html",[0,0.956,62,2.029]],["body/modules/DatabaseModule.html",[0,1.526,2,1.872,3,0.416,4,0.37,5,0.37,7,0.826,8,0.027,11,1.223,12,4.545,13,3.195,28,2.862,29,3.641,50,0.416,51,0.105,52,0.021,53,0.021,62,3.24,246,4.318,247,5.39,248,2.862,249,2.185,250,3.988,251,4.318,252,3.195,253,3.195,254,3.641,255,4.318,256,4.318,257,4.318,258,4.318,259,4.318]],["title/classes/EnvironmentValidation.html",[51,0.082,260,2.497]],["body/classes/EnvironmentValidation.html",[3,0.214,4,0.191,5,0.191,7,0.647,8,0.027,9,2.514,11,0.631,31,1.868,33,1.728,42,0.897,48,0.965,50,0.327,51,0.1,52,0.013,53,0.013,77,0.725,80,0.407,81,1.106,91,1.131,92,1.689,93,2.015,106,1.316,137,3.565,138,2.514,139,1.868,140,1.719,146,1.339,147,1.476,252,1.647,260,2.514,261,4.62,262,1.647,263,3.398,264,3.398,265,3.398,266,3.398,267,3.398,268,3.398,269,3.398,270,3.398,271,3.398,272,2.514,273,2.514,274,2.514,275,2.514,276,2.514,277,3.811,278,2.227,279,2.227,280,2.227,281,2.227,282,2.227,283,2.227,284,2.227,285,2.227,286,2.227,287,2.227,288,2.227,289,2.227,290,2.227,291,2.227,292,2.227,293,2.227,294,1.877,295,1.647,296,4.12,297,2.227,298,2.227,299,2.227,300,2.227,301,2.227,302,1.877,303,2.227,304,2.227,305,2.227,306,2.227,307,2.227,308,1.877,309,2.227,310,2.227,311,2.227,312,2.227,313,1.877,314,1.877,315,1.877,316,3.398,317,2.227,318,2.227,319,1.877,320,2.227,321,2.227,322,2.227,323,1.476,324,1.476,325,2.227,326,2.514,327,1.877,328,3.398,329,1.647,330,2.227,331,1.224,332,2.227,333,2.227,334,2.227,335,3.398,336,1.647,337,2.227]],["title/classes/GenericPublicBaseDto.html",[51,0.082,338,2.497]],["body/classes/GenericPublicBaseDto.html",[3,0.403,4,0.359,5,0.359,8,0.027,33,1.983,50,0.403,51,0.102,52,0.021,53,0.021,77,1.365,84,1.273,91,0.766,92,1.498,106,0.892,183,1.365,230,3.841,338,3.914,339,4.46,340,4.46,341,3.101,342,2.778,343,4.191,344,4.034,345,5.795,346,4.191,347,1.817,348,5.289,349,4.191,350,5.289,351,4.191,352,2.52,353,4.191,354,4.191,355,3.534,356,4.191,357,4.191,358,4.191]],["title/classes/IdDto.html",[51,0.082,359,2.029]],["body/classes/IdDto.html",[3,0.443,4,0.394,5,0.394,7,0.6,8,0.026,33,1.723,50,0.443,51,0.112,52,0.022,53,0.022,77,1.497,80,0.84,81,1.824,91,0.84,93,1.497,106,0.978,139,2.529,140,2.327,277,4.005,294,3.877,359,3.368,360,4.724,361,3.877,362,2.428,363,4.598,364,4.598,365,4.598]],["title/classes/PublicTodoDto.html",[51,0.082,366,2.497]],["body/classes/PublicTodoDto.html",[3,0.452,4,0.402,5,0.402,8,0.026,50,0.452,51,0.114,52,0.022,53,0.022,77,1.528,84,1.425,91,0.858,106,0.998,183,1.528,342,3.111,347,2.034,352,2.822,366,4.197,367,4.783,368,3.957,369,4.693,370,4.798,371,4.693]],["title/controllers/ReadTodoController.html",[372,1.708,373,2.237]],["body/controllers/ReadTodoController.html",[3,0.239,4,0.212,5,0.212,7,0.678,8,0.027,11,0.702,31,1.364,42,2.335,50,0.239,51,0.06,52,0.015,53,0.015,75,1.255,80,0.453,82,1.075,83,2.895,84,1.119,87,2.677,91,0.996,92,0.702,93,1.2,95,1.255,106,0.784,110,1.933,111,3.486,132,2.758,140,1.864,142,1.255,183,1.2,185,2.215,191,2.215,192,2.997,195,3.601,295,3.601,331,2.026,336,3.601,347,1.597,352,1.491,355,3.107,359,2.926,362,2.254,372,1.255,373,2.442,374,3.253,375,2.225,376,1.835,377,1.491,378,2.479,379,1.864,380,3.684,381,3.684,382,2.479,383,2.479,384,4.867,385,2.479,386,4.867,387,4.867,388,2.479,389,4.867,390,2.479,391,4.104,392,2.225,393,2.479,394,2.479,395,2.091,396,2.479,397,2.479,398,1.835,399,2.026,400,1.835,401,3.707,402,4.596,403,2.091,404,1.643,405,2.091,406,2.091,407,2.091,408,2.091,409,2.479,410,2.479,411,3.107,412,2.479,413,2.479,414,4.397,415,2.479,416,2.479,417,2.479,418,2.479,419,2.479]],["title/injectables/ReadTodoService.html",[399,1.856,420,1.463]],["body/injectables/ReadTodoService.html",[3,0.437,4,0.389,5,0.389,7,0.592,8,0.026,11,1.287,42,2.24,50,0.437,51,0.11,52,0.022,53,0.022,80,0.83,92,1.287,95,2.299,106,0.966,374,4.115,375,2.814,379,2.814,392,2.299,399,3.058,420,2.411,421,2.731,422,3.362,423,6.263,424,4.543,425,4.543]],["title/controllers/ReadUsersController.html",[372,1.708,426,2.237]],["body/controllers/ReadUsersController.html",[3,0.273,4,0.243,5,0.243,7,0.677,8,0.027,11,0.804,42,2.212,50,0.273,51,0.069,52,0.016,53,0.016,75,1.437,80,0.519,82,1.231,84,1.576,91,0.949,92,1.736,93,1.788,106,1.169,149,2.445,183,1.69,220,3.436,331,1.561,347,2.249,352,1.707,362,2.477,372,1.437,375,2.892,377,1.707,379,2.058,392,2.779,398,2.101,426,2.696,427,4.229,428,2.394,429,1.882,430,2.237,431,4.376,432,3.429,433,2.696,434,2.237,435,2.394,436,3.516,437,2.839,438,2.839,439,2.394,440,4.067,441,2.839,442,1.882,443,3.429,444,2.839,445,2.101,446,3.62,447,3.429,448,2.839,449,3.429,450,2.394,451,2.394,452,2.237,453,2.394,454,1.882,455,1.882,456,2.839,457,2.839,458,2.394,459,2.839,460,2.839,461,2.839,462,2.839,463,2.839,464,2.839,465,2.394,466,2.839]],["title/injectables/ReadUsersService.html",[420,1.463,452,1.856]],["body/injectables/ReadUsersService.html",[3,0.29,4,0.258,5,0.258,7,0.64,8,0.027,11,0.853,33,2.33,42,2.263,48,1.306,50,0.29,51,0.073,52,0.017,53,0.017,80,0.551,84,1.618,89,1.998,91,0.974,92,1.591,106,1.195,149,2.55,183,1.735,220,3.377,347,2.31,362,2.526,375,2.949,379,2.146,392,3.03,420,1.839,421,1.811,427,4.312,429,1.996,430,2.333,431,4.494,432,3.577,433,2.811,434,2.333,435,3.577,439,3.577,442,2.811,445,3.139,446,3.6,452,2.333,454,1.996,455,1.996,467,2.54,468,3.012,469,3.012,470,3.012,471,3.012,472,3.012,473,4.157,474,3.012,475,3.012,476,2.54]],["title/classes/RegistryDate.html",[51,0.082,477,2.029]],["body/classes/RegistryDate.html",[3,0.421,4,0.374,5,0.374,7,0.57,8,0.027,50,0.421,51,0.106,52,0.021,53,0.021,77,1.422,80,0.798,81,1.767,91,0.992,93,1.767,106,1.155,108,3.397,477,3.264,478,4.98,479,3.683,480,4.98,481,5.906,482,4.98,483,4.368,484,5.906,485,4.368,486,2.21]],["title/modules/TasksModule.html",[0,0.956,63,2.029]],["body/modules/TasksModule.html",[0,1.547,2,1.603,3,0.356,4,0.317,5,0.317,7,0.824,8,0.027,11,1.048,45,3.283,50,0.356,51,0.09,52,0.019,53,0.019,55,2.034,56,2.452,57,2.452,58,2.034,59,2.452,63,3.857,66,3.234,67,2.452,68,2.224,75,2.469,110,1.123,248,2.452,249,1.872,331,2.684,373,3.62,375,2.469,399,3.409,400,3.611,404,2.452,487,3.119,488,3.119,489,3.409,490,3.699,491,3.62,492,4.115,493,3.234,494,4.88,495,3.699]],["title/entities/Todo.html",[110,1.025,496,1.578]],["body/entities/Todo.html",[3,0.237,4,0.211,5,0.211,7,0.676,8,0.027,24,2.542,33,1.374,39,1.633,50,0.237,51,0.06,52,0.015,53,0.015,80,0.45,81,1.194,83,2.048,84,1.651,86,3.241,87,2.409,88,2.903,89,2.111,90,2.903,91,1.116,92,1.374,93,1.925,106,1.258,108,2.409,110,1.113,112,1.355,117,3.438,119,4.023,122,3.216,133,2.43,150,2.077,151,2.077,153,1.855,377,1.481,477,2.204,486,1.246,496,1.152,497,1.633,498,2.077,499,4.38,500,3.241,501,3.092,502,4.282,503,2.463,504,2.077,505,2.463,506,3.241,507,2.463,508,3.693,509,4.091,510,3.092,511,2.463,512,2.077,513,2.463,514,2.463,515,3.666,516,3.666,517,3.666,518,2.463,519,3.666,520,3.666,521,2.463,522,2.668,523,3.666,524,2.463,525,3.241,526,3.241,527,3.241,528,4.38,529,2.077,530,2.463,531,1.823,532,2.463,533,2.463,534,2.463,535,2.463,536,2.463,537,2.463,538,2.077,539,3.241,540,4.38,541,1.823,542,1.481,543,1.823]],["title/entities/TodoVersion.html",[496,1.578,522,1.856]],["body/entities/TodoVersion.html",[3,0.311,4,0.276,5,0.276,7,0.58,8,0.027,33,2.058,39,2.138,50,0.311,51,0.078,52,0.018,53,0.018,80,0.59,81,1.449,91,1.088,93,1.876,106,1.225,108,2.447,110,1.917,153,3.088,200,2.138,344,3.376,362,2.208,370,3.292,480,4.295,482,4.295,486,1.633,496,1.509,497,2.138,502,4.063,506,3.769,508,2.72,522,2.447,525,3.769,526,3.769,527,3.769,539,3.769,541,2.387,542,1.94,543,2.387,544,5.021,545,2.72,546,3.226,547,4.45,548,3.226,549,3.226,550,2.72,551,4.45,552,3.226,553,3.226,554,3.752,555,3.226,556,5.093]],["title/classes/TodoVersionBaseDto.html",[51,0.082,131,2.029]],["body/classes/TodoVersionBaseDto.html",[3,0.49,4,0.436,5,0.436,8,0.024,50,0.49,51,0.124,52,0.024,53,0.024,77,1.658,131,3.58,153,2.577,341,3.769,557,4.295]],["title/classes/UpdateTodoDto.html",[51,0.082,558,2.029]],["body/classes/UpdateTodoDto.html",[3,0.459,4,0.409,5,0.409,7,0.747,8,0.026,50,0.459,51,0.116,52,0.023,53,0.023,76,2.869,77,1.554,79,3.163,142,2.415,209,3.798,218,3.163,219,3.163,558,3.445,559,4.024,560,5.73,561,4.024]],["title/classes/UpdateUserDto.html",[51,0.082,446,2.029]],["body/classes/UpdateUserDto.html",[3,0.459,4,0.409,5,0.409,7,0.747,8,0.026,50,0.459,51,0.116,52,0.023,53,0.023,77,1.554,127,2.415,142,2.415,149,2.869,181,3.163,209,3.798,218,3.163,446,3.445,561,4.024,562,4.024,563,5.73]],["title/entities/User.html",[89,1.265,496,1.578]],["body/entities/User.html",[3,0.292,4,0.26,5,0.26,7,0.643,8,0.027,24,2.306,33,1.138,39,2.013,50,0.292,51,0.074,52,0.017,53,0.017,80,0.555,81,1.389,89,1.599,91,1.097,92,1.515,93,1.954,106,1.277,108,1.67,110,1.711,112,2.712,182,2.827,183,1.389,184,3.156,185,2.565,189,2.013,200,2.013,201,2.56,202,2.56,222,3.156,377,1.826,477,2.965,486,1.536,496,1.42,497,2.013,501,3.597,502,3.958,504,3.597,506,3.649,509,2.56,512,2.56,525,3.649,526,3.649,527,3.649,529,2.56,538,2.56,539,3.649,541,2.247,542,1.826,543,2.247,550,2.56,554,3.597,564,2.56,565,4.266,566,3.036,567,3.036,568,3.036,569,3.036,570,3.036,571,3.036,572,4.266,573,3.036,574,3.036,575,3.036,576,3.036,577,3.036,578,3.036,579,3.036,580,3.036,581,3.036,582,3.036,583,3.036,584,4.931]],["title/modules/UsersModule.html",[0,0.956,64,2.029]],["body/modules/UsersModule.html",[0,1.608,2,1.74,3,0.386,4,0.344,5,0.344,7,0.808,8,0.027,11,1.137,45,3.415,50,0.386,51,0.097,52,0.02,53,0.02,55,2.207,56,2.66,57,2.66,58,2.207,59,2.66,64,3.81,66,3.41,67,2.66,68,2.413,75,2.604,89,1.504,248,2.66,249,2.031,331,2.83,375,2.604,426,3.764,452,3.485,453,3.384,585,3.384,586,3.384,587,4.013,588,4.013,589,4.013,590,4.013]],["title/modules/VersioningModule.html",[0,0.956,65,2.029]],["body/modules/VersioningModule.html",[0,1.61,2,2.043,3,0.454,4,0.404,5,0.404,7,0.796,8,0.027,11,1.335,50,0.454,51,0.114,52,0.023,53,0.023,65,3.419,248,3.124,249,2.385,522,2.592,531,3.487,591,4.713,592,3.974,593,4.713]],["title/injectables/VersioningService.html",[420,1.463,594,2.497]],["body/injectables/VersioningService.html",[3,0.291,4,0.259,5,0.259,7,0.733,8,0.027,11,0.855,30,2.956,31,2.337,33,1.843,42,1.216,48,2.313,50,0.291,51,0.073,52,0.017,53,0.017,80,0.552,82,1.842,84,1.291,90,2.002,91,0.777,95,1.528,106,0.904,110,1.771,153,2.488,183,1.384,192,1.661,200,2.002,226,2.235,249,1.528,323,2.002,324,2.002,342,2.002,347,1.842,362,1.309,370,3.638,379,2.15,392,1.528,420,1.842,421,1.816,430,2.337,434,2.337,486,1.528,522,2.337,531,2.235,592,2.547,594,3.145,595,2.547,596,4.25,597,3.02,598,4.434,599,4.146,600,3.02,601,4.25,602,4.25,603,5.623,604,3.02,605,3.145,606,2.547,607,2.547,608,3.02,609,3.583,610,3.02,611,2.547,612,3.02,613,3.02,614,2.547,615,3.02,616,3.145,617,3.02,618,3.02,619,3.02,620,3.02,621,3.02,622,3.02,623,3.02,624,3.02,625,3.02,626,3.02,627,3.02,628,3.02,629,2.547]],["title/controllers/WriteTodoController.html",[372,1.708,491,2.237]],["body/controllers/WriteTodoController.html",[3,0.167,4,0.148,5,0.148,7,0.645,8,0.027,11,0.49,20,1.147,30,2.829,42,1.41,48,2.502,50,0.167,51,0.042,52,0.011,53,0.011,75,0.876,80,0.316,82,0.75,83,2.829,84,1.063,87,2.587,91,0.941,92,0.992,93,1.14,95,2.821,106,0.745,110,1.97,111,3.194,133,1.848,142,0.876,183,1.14,191,2.414,207,3.194,219,1.848,336,3.257,344,3.696,347,1.518,352,1.041,359,2.647,362,1.908,372,0.876,376,1.281,377,1.041,379,1.411,392,2.228,395,1.46,398,2.971,400,1.281,401,3.385,402,3.712,403,1.46,404,1.147,405,1.46,406,1.46,407,1.46,408,2.953,411,3.385,430,3.22,433,1.848,434,3.259,436,2.591,442,1.147,443,2.351,447,1.46,449,2.351,450,1.46,451,1.46,454,1.147,455,1.147,458,1.46,465,1.46,489,1.926,491,1.848,492,2.351,493,2.661,542,2.414,558,2.647,605,2.063,616,2.063,630,2.971,631,1.731,632,1.731,633,1.731,634,1.731,635,4.402,636,1.731,637,4.015,638,3.712,639,3.385,640,1.731,641,2.788,642,1.731,643,1.731,644,3.712,645,1.731,646,1.731,647,1.731,648,2.788,649,2.788,650,1.731,651,1.731,652,2.788,653,1.731,654,1.731,655,3.502,656,1.731,657,1.46,658,1.731,659,1.46,660,1.731,661,1.731,662,1.731,663,1.731,664,1.731,665,1.46,666,1.731,667,1.731,668,2.788,669,2.788,670,2.788,671,1.731,672,1.731,673,1.731,674,1.731,675,1.731,676,1.731,677,1.731,678,1.731,679,1.731,680,1.731,681,1.731]],["title/injectables/WriteTodoService.html",[420,1.463,489,1.856]],["body/injectables/WriteTodoService.html",[3,0.242,4,0.216,5,0.216,7,0.715,8,0.027,9,1.863,11,0.713,20,2.47,30,3.295,31,2.44,33,2.126,42,1.975,48,1.923,50,0.242,51,0.061,52,0.015,53,0.015,80,0.46,82,1.091,84,1.489,91,0.896,92,0.713,95,1.274,106,1.043,110,1.59,183,1.597,192,2.697,207,2.948,219,2.47,249,1.274,323,2.47,324,3.469,342,1.669,347,2.126,362,2.376,379,1.886,391,2.123,392,2.481,404,1.669,420,1.615,421,1.514,422,1.863,430,2.049,433,2.47,434,2.049,442,2.47,445,2.757,454,1.669,455,1.669,473,1.863,476,2.123,486,1.274,489,2.049,493,3.469,496,1.177,500,1.863,542,2.241,558,2.948,598,3.628,599,3.142,605,2.757,606,3.741,607,2.123,609,2.123,616,3.628,629,2.123,630,3.873,644,4.135,682,2.518,683,2.518,684,3.727,685,2.518,686,2.518,687,2.518,688,2.518,689,2.518,690,2.518,691,2.518,692,3.727,693,2.518,694,2.518,695,2.518,696,2.518,697,2.518,698,2.518,699,2.518,700,2.518,701,2.518,702,2.518,703,3.727,704,3.727,705,2.518,706,2.518,707,2.518,708,2.518,709,2.518,710,2.518,711,2.518]],["title/coverage.html",[712,3.395]],["body/coverage.html",[0,0.659,5,0.199,8,0.027,19,1.722,21,2.6,48,1.009,51,0.148,52,0.014,53,0.014,58,1.28,76,1.399,78,1.962,79,2.805,89,0.872,91,0.425,110,0.707,127,1.177,131,1.399,137,1.28,139,1.932,140,1.778,153,1.177,180,1.962,181,2.805,207,1.399,208,1.962,220,1.399,221,1.962,250,1.722,253,1.722,260,1.722,261,2.6,262,2.6,272,1.722,273,1.722,274,1.722,275,1.722,276,1.722,277,1.542,313,3.976,323,4.484,338,1.722,339,1.962,340,1.962,341,2.6,359,1.399,360,1.962,361,1.962,366,1.722,367,1.962,368,1.962,372,2.142,373,1.542,374,2.6,375,2.386,376,2.6,399,1.28,420,2.044,422,2.6,426,1.542,427,2.6,428,1.962,446,1.399,452,1.28,467,1.962,477,1.399,478,1.962,479,1.962,489,1.28,491,1.542,493,2.329,496,1.979,498,1.962,500,1.722,522,1.28,544,1.962,545,1.962,557,1.962,558,1.399,559,1.962,562,1.962,564,1.962,594,1.722,595,1.962,630,2.6,712,1.722,713,1.962,714,2.327,715,2.962,716,1.962,717,6.492,718,1.962,719,4.715,720,4.233,721,2.962,722,2.962,723,6.109,724,1.962,725,3.513,726,3.513,727,1.962,728,1.962,729,4.659,730,1.962,731,1.962,732,1.962,733,1.962,734,2.6,735,3.513,736,2.327,737,2.327,738,3.513,739,4.233,740,2.327,741,2.327,742,2.327]],["title/dependencies.html",[55,2.229,743,2.383]],["body/dependencies.html",[8,0.027,11,1.048,13,2.737,15,3.119,16,4.115,18,3.119,28,2.452,38,3.119,51,0.119,52,0.019,53,0.019,55,2.034,142,1.872,146,2.224,147,2.452,249,1.872,302,3.119,486,1.872,744,3.699,745,3.699,746,3.699,747,5.461,748,3.699,749,3.699,750,3.699,751,3.699,752,3.699,753,4.115,754,3.699,755,3.699,756,3.699,757,3.699,758,3.699,759,3.699,760,3.699,761,3.699,762,6.036,763,5.461,764,3.699,765,3.699,766,3.699,767,3.699,768,3.699,769,3.699,770,3.699,771,3.699,772,4.88,773,3.119,774,3.699,775,3.699,776,3.699,777,3.699,778,3.699,779,3.699,780,3.699,781,3.699,782,3.699,783,3.699,784,3.699,785,3.699,786,3.699,787,3.699]],["title/miscellaneous/enumerations.html",[788,1.554,789,3.418]],["body/miscellaneous/enumerations.html",[8,0.026,52,0.022,53,0.022,80,0.834,117,3.695,122,3.695,788,2.508,789,3.846,790,5.575,791,6.021,792,4.561,793,5.575,794,4.843,795,5.575,796,5.575,797,4.561,798,3.375,799,4.561,800,4.561,801,5.575]],["title/miscellaneous/functions.html",[788,1.554,802,3.418]],["body/miscellaneous/functions.html",[8,0.025,52,0.021,53,0.021,58,3.171,80,0.758,84,1.751,91,1.054,137,2.889,139,3.334,140,3.068,183,1.877,252,3.067,253,3.887,261,3.067,262,3.067,277,3.481,314,3.495,315,4.429,347,2.499,715,4.429,716,4.429,718,4.429,734,3.067,788,2.279,802,3.495,803,3.495,804,5.252,805,4.145,806,4.145,807,6.391,808,5.252,809,4.145]],["title/index.html",[80,0.517,798,2.091,810,2.383]],["body/index.html",[4,0.164,8,0.025,20,2.476,48,1.619,52,0.012,53,0.012,83,1.984,87,1.05,88,1.998,89,2.217,92,0.54,97,2.246,98,3.378,99,3.14,100,2.23,101,2.23,102,2.23,111,2.953,132,2.602,155,2.542,182,2.813,183,0.621,185,1.147,189,1.265,192,1.05,222,3.634,226,1.412,230,1.265,233,1.609,254,2.542,295,3.14,308,1.609,329,1.412,331,1.05,344,1.998,362,0.827,429,1.998,430,2.055,434,1.658,436,3.14,598,1.412,611,1.609,614,4.627,638,1.609,639,1.609,657,2.542,659,1.609,665,4.142,712,1.412,773,4.142,794,1.412,811,4.621,812,1.908,813,1.908,814,3.014,815,3.014,816,3.15,817,3.896,818,2.542,819,1.609,820,1.908,821,1.609,822,1.908,823,1.908,824,3.736,825,3.736,826,1.908,827,5.143,828,1.908,829,1.908,830,1.908,831,1.908,832,1.908,833,1.908,834,3.014,835,1.908,836,3.014,837,3.014,838,1.908,839,3.896,840,3.014,841,3.736,842,4.621,843,3.15,844,1.908,845,5.732,846,1.908,847,1.609,848,1.908,849,3.15,850,3.014,851,1.908,852,1.908,853,1.908,854,3.014,855,3.736,856,1.908,857,4.621,858,1.908,859,3.014,860,4.244,861,1.908,862,1.908,863,3.014,864,2.542,865,2.542,866,1.908,867,1.908,868,1.908,869,4.244,870,3.014,871,3.736,872,3.014,873,1.908,874,1.908,875,1.908,876,1.908,877,1.908,878,1.908,879,1.908,880,1.908,881,3.014,882,1.908,883,1.908,884,1.908,885,1.908,886,1.908,887,1.908,888,1.908,889,1.908,890,1.908,891,3.014,892,1.908,893,1.908,894,3.014,895,3.736,896,1.908,897,1.908,898,1.908,899,1.908,900,1.908,901,1.908,902,1.908,903,1.609,904,1.908,905,3.736,906,1.908,907,1.609,908,1.908,909,1.908,910,5.143,911,1.908,912,1.908,913,1.908,914,1.908,915,3.014,916,1.908,917,1.908,918,1.908,919,3.014,920,1.908,921,1.908,922,1.908,923,2.23,924,3.014,925,1.908,926,1.908,927,1.908,928,1.908,929,1.609,930,1.908,931,1.908,932,1.908,933,1.908,934,1.908,935,1.908,936,1.908,937,1.908,938,1.609,939,1.908,940,1.908,941,1.908,942,1.908,943,1.908,944,1.908,945,1.265]],["title/license.html",[798,2.091,810,2.383,945,1.873]],["body/license.html",[8,0.019,52,0.019,53,0.019,68,2.239,128,2.755,191,2.239,473,2.755,713,3.14,753,3.14,839,3.14,849,4.133,923,2.755,945,2.468,946,5.479,947,3.723,948,3.723,949,3.14,950,3.14,951,4.901,952,3.723,953,3.723,954,3.723,955,3.723,956,3.723,957,3.723,958,4.901,959,6.5,960,3.723,961,3.723,962,4.62,963,3.723,964,4.901,965,3.723,966,3.723,967,3.723,968,3.723,969,3.723,970,3.723,971,3.723,972,3.723,973,3.723,974,4.901,975,3.723,976,3.723,977,3.723,978,3.723,979,3.723,980,3.723,981,4.901,982,4.901,983,3.723,984,3.723,985,3.723,986,3.723,987,3.723,988,3.723,989,3.723,990,3.723,991,3.723,992,3.723,993,3.723,994,3.723,995,3.723,996,3.723,997,3.723,998,3.723,999,3.723,1000,3.723,1001,3.723,1002,3.723,1003,3.723,1004,3.723,1005,3.723,1006,3.723,1007,3.723,1008,3.723,1009,3.723]],["title/modules.html",[2,1.989]],["body/modules.html",[1,2.845,2,2.051,8,0.023,52,0.023,53,0.023,54,3.137,62,2.845,63,2.845,64,2.845,65,2.845,929,5.159,1010,6.118,1011,6.118,1012,6.602,1013,6.118,1014,6.118]],["title/overview.html",[1015,3.869]],["body/overview.html",[0,1.109,1,3.375,2,1.698,8,0.026,45,2.354,52,0.02,53,0.02,54,4.443,55,2.154,56,2.596,57,2.596,58,2.154,59,2.596,60,3.302,61,3.302,62,3.375,63,3.852,64,3.696,65,3.375,66,3.357,67,2.596,68,2.354,75,1.982,77,1.275,114,2.898,399,3.087,421,2.354,452,3.087,487,3.302,488,3.302,489,3.087,497,2.596,585,3.302,586,3.302,1015,3.302,1016,3.916,1017,5.065,1018,3.916]],["title/properties.html",[81,1.32,743,2.383]],["body/properties.html",[8,0.026,52,0.023,53,0.023,81,1.58,83,2.27,132,2.456,153,2.456,429,3.217,816,4.093,817,4.093,818,4.093,819,4.093,821,4.093,843,4.093,923,3.591,938,4.093,945,3.217,949,4.093,950,4.093,1019,4.854,1020,4.854]],["title/miscellaneous/variables.html",[326,3,788,1.554]],["body/miscellaneous/variables.html",[0,1.434,8,0.027,19,3.412,21,3.412,24,2.367,30,1.618,31,1.48,42,1.084,48,1.696,52,0.015,53,0.015,80,0.492,81,1.274,91,0.843,230,1.784,250,2.895,272,2.895,273,2.895,274,3.412,275,2.895,276,2.895,319,4.269,324,1.784,326,1.991,327,2.269,329,2.895,510,5.308,721,2.269,722,3.888,724,3.888,727,2.269,728,3.299,729,2.269,730,3.299,731,3.299,732,2.269,733,3.299,734,1.991,788,1.48,794,4.607,803,2.269,847,2.269,864,2.269,865,2.269,903,2.269,907,3.888,962,2.269,1021,2.691,1022,3.913,1023,5.791,1024,2.691,1025,2.691,1026,2.691,1027,2.691,1028,2.691,1029,2.691,1030,2.691,1031,2.691,1032,2.691,1033,2.691,1034,2.691,1035,2.691,1036,3.913,1037,2.691,1038,2.691,1039,2.691,1040,2.691,1041,2.691,1042,2.691,1043,3.913,1044,2.691,1045,2.691,1046,2.691,1047,2.691,1048,2.691,1049,2.691,1050,2.691,1051,2.691,1052,2.691,1053,2.691,1054,2.691,1055,2.691,1056,2.691,1057,2.691,1058,2.691,1059,3.913,1060,2.691,1061,2.691,1062,2.691,1063,2.691,1064,2.691,1065,2.691,1066,2.691,1067,2.691,1068,2.691,1069,2.691,1070,2.691,1071,2.691,1072,2.691,1073,2.691,1074,2.691,1075,2.691,1076,2.691,1077,2.691,1078,2.691,1079,2.691,1080,2.691,1081,2.691,1082,2.691,1083,2.691,1084,2.691,1085,2.691,1086,2.691,1087,2.691]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentValidation.html":{},"classes/GenericPublicBaseDto.html":{},"classes/IdDto.html":{},"classes/PublicTodoDto.html":{},"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"classes/RegistryDate.html":{},"modules/TasksModule.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"classes/TodoVersionBaseDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"modules/VersioningModule.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":323,"title":{},"body":{"classes/EnvironmentValidation.html":{},"injectables/VersioningService.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1019,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":226,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/VersioningService.html":{},"index.html":{}}}],["1.1.25",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":114,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"overview.html":{}}}],["2.0.5",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":386,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["200})@apiresponse({description",{"_index":647,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["2023",{"_index":113,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{}}}],["2024",{"_index":948,"title":{},"body":{"license.html":{}}}],["204})@patch(':id",{"_index":650,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["25",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":517,"title":{},"body":{"entities/Todo.html":{}}}],["3",{"_index":1017,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["31t23:59:59.000z",{"_index":168,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["31t23:59:59.000z'})@isoptional()@type(undefined",{"_index":115,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{}}}],["37.5.3",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1018,"title":{},"body":{"overview.html":{}}}],["4.1.0",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":663,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["401",{"_index":886,"title":{},"body":{"index.html":{}}}],["404",{"_index":389,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["5",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["5.1.4",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["5.94.0",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1016,"title":{},"body":{"overview.html":{}}}],["7.4.2",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":224,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["8.13.0",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":980,"title":{},"body":{"license.html":{}}}],["access",{"_index":847,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":473,"title":{},"body":{"injectables/ReadUsersService.html":{},"injectables/WriteTodoService.html":{},"license.html":{}}}],["adds",{"_index":474,"title":{},"body":{"injectables/ReadUsersService.html":{}}}],["addserver(swagger_server",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterinsert",{"_index":525,"title":{},"body":{"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{}}}],["afterload",{"_index":526,"title":{},"body":{"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{}}}],["afterupdate",{"_index":527,"title":{},"body":{"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{}}}],["allow",{"_index":818,"title":{},"body":{"index.html":{},"properties.html":{}}}],["allows",{"_index":658,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["alltodos",{"_index":380,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["alltodos(@query",{"_index":412,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["alltodos(query",{"_index":382,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["amazing",{"_index":930,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":972,"title":{},"body":{"license.html":{}}}],["api",{"_index":817,"title":{},"body":{"index.html":{},"properties.html":{}}}],["apibody",{"_index":655,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["apioperation",{"_index":401,"title":{},"body":{"controllers/ReadTodoController.html":{},"controllers/WriteTodoController.html":{}}}],["apioperation({summary",{"_index":645,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["apiproperty",{"_index":141,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{}}}],["apiproperty({description",{"_index":94,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{}}}],["apiproperty({description:\"describe",{"_index":160,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["apiproperty({description:\"status",{"_index":166,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["apiproperty({description:\"todo",{"_index":156,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["apiresponse",{"_index":402,"title":{},"body":{"controllers/ReadTodoController.html":{},"controllers/WriteTodoController.html":{}}}],["apiresponse({description",{"_index":676,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["apiresponse({type:updatetododto,description",{"_index":674,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["apitags",{"_index":403,"title":{},"body":{"controllers/ReadTodoController.html":{},"controllers/WriteTodoController.html":{}}}],["apitags(\"todo",{"_index":407,"title":{},"body":{"controllers/ReadTodoController.html":{},"controllers/WriteTodoController.html":{}}}],["app",{"_index":308,"title":{},"body":{"classes/EnvironmentValidation.html":{},"index.html":{}}}],["app_cache_max",{"_index":263,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["app_cache_max:number",{"_index":310,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["app_cache_ttl",{"_index":264,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["app_cache_ttl:number",{"_index":309,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["app_pipe",{"_index":17,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["app_port",{"_index":265,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["app_port:number",{"_index":311,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["app_prefix",{"_index":266,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["app_prefix:string",{"_index":312,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["appconfigmodule",{"_index":1,"title":{"modules/AppConfigModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodule",{"_index":54,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":1007,"title":{},"body":{"license.html":{}}}],["associated",{"_index":128,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"license.html":{}}}],["async",{"_index":30,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"miscellaneous/variables.html":{}}}],["attempt",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticate",{"_index":843,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authentication",{"_index":827,"title":{},"body":{"index.html":{}}}],["author",{"_index":938,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":882,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":846,"title":{},"body":{"index.html":{}}}],["authors",{"_index":997,"title":{},"body":{"license.html":{}}}],["available",{"_index":1011,"title":{},"body":{"modules.html":{}}}],["await",{"_index":616,"title":{},"body":{"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["awareness:a",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend",{"_index":821,"title":{},"body":{"index.html":{},"properties.html":{}}}],["backers",{"_index":931,"title":{},"body":{"index.html":{}}}],["bad",{"_index":664,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["badrequestexception",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base",{"_index":218,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{}}}],["base.dto",{"_index":154,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["base.dto.ts",{"_index":341,"title":{},"body":{"classes/GenericPublicBaseDto.html":{},"classes/TodoVersionBaseDto.html":{},"coverage.html":{}}}],["base.dto.ts:1",{"_index":346,"title":{},"body":{"classes/GenericPublicBaseDto.html":{}}}],["basetododto",{"_index":76,"title":{"classes/BaseTodoDto.html":{}},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"classes/UpdateTodoDto.html":{},"coverage.html":{}}}],["basetododto:18",{"_index":215,"title":{},"body":{"classes/CreateTodoDto.html":{}}}],["basetododto:26",{"_index":211,"title":{},"body":{"classes/CreateTodoDto.html":{}}}],["basetododto:36",{"_index":214,"title":{},"body":{"classes/CreateTodoDto.html":{}}}],["basetododto:46",{"_index":212,"title":{},"body":{"classes/CreateTodoDto.html":{}}}],["basetododto:56",{"_index":213,"title":{},"body":{"classes/CreateTodoDto.html":{}}}],["basetododto:65",{"_index":216,"title":{},"body":{"classes/CreateTodoDto.html":{}}}],["basetododto:74",{"_index":217,"title":{},"body":{"classes/CreateTodoDto.html":{}}}],["baseuserdto",{"_index":127,"title":{"classes/BaseUserDto.html":{}},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["baseuserdto:12",{"_index":240,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["baseuserdto:21",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["baseuserdto:32",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["baseuserdto:9",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["before",{"_index":867,"title":{},"body":{"index.html":{}}}],["below",{"_index":856,"title":{},"body":{"index.html":{}}}],["ben",{"_index":637,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["body",{"_index":449,"title":{},"body":{"controllers/ReadUsersController.html":{},"controllers/WriteTodoController.html":{}}}],["bonus",{"_index":892,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bread",{"_index":102,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"index.html":{}}}],["browse",{"_index":1012,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1013,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buy",{"_index":99,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"index.html":{}}}],["c",{"_index":947,"title":{},"body":{"license.html":{}}}],["cache",{"_index":38,"title":{},"body":{"modules/AppConfigModule.html":{},"dependencies.html":{}}}],["cache:true",{"_index":25,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["cachemodule",{"_index":14,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["cachemodule.registerasync",{"_index":27,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["case",{"_index":883,"title":{},"body":{"index.html":{}}}],["catch",{"_index":693,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["cd",{"_index":902,"title":{},"body":{"index.html":{}}}],["character",{"_index":237,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters",{"_index":231,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["charge",{"_index":955,"title":{},"body":{"license.html":{}}}],["checker",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["choice",{"_index":851,"title":{},"body":{"index.html":{}}}],["ci",{"_index":901,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1000,"title":{},"body":{"license.html":{}}}],["class",{"_index":51,"title":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentValidation.html":{},"classes/GenericPublicBaseDto.html":{},"classes/IdDto.html":{},"classes/PublicTodoDto.html":{},"classes/RegistryDate.html":{},"classes/TodoVersionBaseDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentValidation.html":{},"classes/GenericPublicBaseDto.html":{},"classes/IdDto.html":{},"classes/PublicTodoDto.html":{},"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"classes/RegistryDate.html":{},"modules/TasksModule.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"classes/TodoVersionBaseDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"modules/VersioningModule.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":77,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentValidation.html":{},"classes/GenericPublicBaseDto.html":{},"classes/IdDto.html":{},"classes/PublicTodoDto.html":{},"classes/RegistryDate.html":{},"classes/TodoVersionBaseDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["cli",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["cluster_appmodule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":487,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":488,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":585,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":586,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":885,"title":{},"body":{"index.html":{}}}],["column",{"_index":502,"title":{},"body":{"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{}}}],["column(undefined",{"_index":512,"title":{},"body":{"entities/Todo.html":{},"entities/User.html":{}}}],["column({nullable",{"_index":504,"title":{},"body":{"entities/Todo.html":{},"entities/User.html":{}}}],["column({nullable:false",{"_index":578,"title":{},"body":{"entities/User.html":{}}}],["column({nullable:false,unique:true",{"_index":577,"title":{},"body":{"entities/User.html":{}}}],["column({type",{"_index":508,"title":{},"body":{"entities/Todo.html":{},"entities/TodoVersion.html":{}}}],["column({unique",{"_index":569,"title":{},"body":{"entities/User.html":{}}}],["column({unique:true,nullable:true",{"_index":580,"title":{},"body":{"entities/User.html":{}}}],["comes",{"_index":812,"title":{},"body":{"index.html":{}}}],["common/decorators/is",{"_index":138,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/EnvironmentValidation.html":{}}}],["common/dtos/id",{"_index":405,"title":{},"body":{"controllers/ReadTodoController.html":{},"controllers/WriteTodoController.html":{}}}],["common/embedded/registry",{"_index":529,"title":{},"body":{"entities/Todo.html":{},"entities/User.html":{}}}],["compodoc/compodoc",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":979,"title":{},"body":{"license.html":{}}}],["config",{"_index":252,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/EnvironmentValidation.html":{},"miscellaneous/functions.html":{}}}],["config.ts",{"_index":728,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":12,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/DatabaseModule.html":{}}}],["configservice",{"_index":247,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice:configservice):promise",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration/app/app.config.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration/db/database",{"_index":251,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["connection",{"_index":1008,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":334,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["console.log(`entity",{"_index":539,"title":{},"body":{"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{}}}],["console.log(`limit!${limit",{"_index":415,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["const",{"_index":31,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/EnvironmentValidation.html":{},"controllers/ReadTodoController.html":{},"injectables/VersioningService.html":{},"injectables/WriteTodoService.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":342,"title":{},"body":{"classes/GenericPublicBaseDto.html":{},"classes/PublicTodoDto.html":{},"injectables/VersioningService.html":{},"injectables/WriteTodoService.html":{}}}],["constructor(@injectrepository(todo",{"_index":690,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["constructor(@injectrepository(todoversion",{"_index":608,"title":{},"body":{"injectables/VersioningService.html":{}}}],["constructor(partial",{"_index":369,"title":{},"body":{"classes/PublicTodoDto.html":{}}}],["constructor(private",{"_index":352,"title":{},"body":{"classes/GenericPublicBaseDto.html":{},"classes/PublicTodoDto.html":{},"controllers/ReadTodoController.html":{},"controllers/ReadUsersController.html":{},"controllers/WriteTodoController.html":{}}}],["constructor(statuscode",{"_index":343,"title":{},"body":{"classes/GenericPublicBaseDto.html":{}}}],["constructor(todorepository",{"_index":682,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["constructor(versioningtodorepository",{"_index":597,"title":{},"body":{"injectables/VersioningService.html":{}}}],["content",{"_index":648,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["contract",{"_index":1004,"title":{},"body":{"license.html":{}}}],["controller",{"_index":372,"title":{"controllers/ReadTodoController.html":{},"controllers/ReadUsersController.html":{},"controllers/WriteTodoController.html":{}},"body":{"controllers/ReadTodoController.html":{},"controllers/ReadUsersController.html":{},"controllers/WriteTodoController.html":{},"coverage.html":{}}}],["controller('read/todos",{"_index":409,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["controller('users",{"_index":456,"title":{},"body":{"controllers/ReadUsersController.html":{}}}],["controller('write/todos",{"_index":656,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["controllers",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"controllers/ReadTodoController.html":{},"controllers/ReadUsersController.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"controllers/WriteTodoController.html":{},"overview.html":{}}}],["copies",{"_index":974,"title":{},"body":{"license.html":{}}}],["copy",{"_index":958,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":946,"title":{},"body":{"license.html":{}}}],["count",{"_index":698,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["coverage",{"_index":712,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":430,"title":{},"body":{"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"index.html":{}}}],["create(@body",{"_index":458,"title":{},"body":{"controllers/ReadUsersController.html":{},"controllers/WriteTodoController.html":{}}}],["create(createtaskdto",{"_index":684,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["create(createtododto",{"_index":632,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["create(createuserdto",{"_index":435,"title":{},"body":{"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{}}}],["created",{"_index":638,"title":{},"body":{"controllers/WriteTodoController.html":{},"index.html":{}}}],["createdat",{"_index":480,"title":{},"body":{"classes/RegistryDate.html":{},"entities/TodoVersion.html":{}}}],["createdatecolumn",{"_index":482,"title":{},"body":{"classes/RegistryDate.html":{},"entities/TodoVersion.html":{}}}],["createtaskdto",{"_index":686,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["createtododto",{"_index":207,"title":{"classes/CreateTodoDto.html":{}},"body":{"classes/CreateTodoDto.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{}}}],["createtododto):promise",{"_index":672,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["createtododto})@apiresponse({status",{"_index":636,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["createuserdto",{"_index":220,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"coverage.html":{}}}],["creating",{"_index":695,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["creation",{"_index":659,"title":{},"body":{"controllers/WriteTodoController.html":{},"index.html":{}}}],["crud",{"_index":824,"title":{},"body":{"index.html":{}}}],["damages",{"_index":1001,"title":{},"body":{"license.html":{}}}],["data",{"_index":344,"title":{},"body":{"classes/GenericPublicBaseDto.html":{},"entities/TodoVersion.html":{},"controllers/WriteTodoController.html":{},"index.html":{}}}],["data:t",{"_index":351,"title":{},"body":{"classes/GenericPublicBaseDto.html":{}}}],["database",{"_index":295,"title":{},"body":{"classes/EnvironmentValidation.html":{},"controllers/ReadTodoController.html":{},"index.html":{}}}],["database/database.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["database:configservice.getorthrow(\"datasource_database",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":250,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":62,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databases",{"_index":835,"title":{},"body":{"index.html":{}}}],["datasource_database",{"_index":267,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["datasource_database:string",{"_index":299,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["datasource_host",{"_index":268,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["datasource_host:string",{"_index":300,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["datasource_password",{"_index":269,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["datasource_password:string",{"_index":298,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["datasource_port",{"_index":270,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["datasource_port:number",{"_index":301,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["datasource_username",{"_index":271,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["datasource_username:string",{"_index":297,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["date",{"_index":108,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"classes/RegistryDate.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{}}}],["date.ts",{"_index":479,"title":{},"body":{"classes/RegistryDate.html":{},"coverage.html":{}}}],["date.ts:5",{"_index":483,"title":{},"body":{"classes/RegistryDate.html":{}}}],["date.ts:7",{"_index":485,"title":{},"body":{"classes/RegistryDate.html":{}}}],["deal",{"_index":961,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1009,"title":{},"body":{"license.html":{}}}],["decide",{"_index":877,"title":{},"body":{"index.html":{}}}],["declaration",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":667,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["decorators",{"_index":93,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentValidation.html":{},"classes/IdDto.html":{},"controllers/ReadTodoController.html":{},"controllers/ReadUsersController.html":{},"classes/RegistryDate.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{},"controllers/WriteTodoController.html":{}}}],["decorators/is",{"_index":364,"title":{},"body":{"classes/IdDto.html":{}}}],["default",{"_index":510,"title":{},"body":{"entities/Todo.html":{},"miscellaneous/variables.html":{}}}],["default:taskpriority.low",{"_index":535,"title":{},"body":{"entities/Todo.html":{}}}],["defined",{"_index":106,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentValidation.html":{},"classes/GenericPublicBaseDto.html":{},"classes/IdDto.html":{},"classes/PublicTodoDto.html":{},"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"classes/RegistryDate.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["definitions",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["delete",{"_index":451,"title":{},"body":{"controllers/ReadUsersController.html":{},"controllers/WriteTodoController.html":{}}}],["delete(':id",{"_index":443,"title":{},"body":{"controllers/ReadUsersController.html":{},"controllers/WriteTodoController.html":{}}}],["dependencies",{"_index":55,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describe",{"_index":104,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{}}}],["description",{"_index":83,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"controllers/ReadTodoController.html":{},"entities/Todo.html":{},"controllers/WriteTodoController.html":{},"index.html":{},"properties.html":{}}}],["description:\"list",{"_index":177,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["description:\"priority",{"_index":170,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["description:\"status",{"_index":162,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["description:\"user",{"_index":175,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["description:string",{"_index":161,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["design",{"_index":834,"title":{},"body":{"index.html":{}}}],["details",{"_index":857,"title":{},"body":{"index.html":{}}}],["dev",{"_index":903,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["develop",{"_index":815,"title":{},"body":{"index.html":{}}}],["development",{"_index":912,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":970,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":713,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documentbuilder",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doe",{"_index":862,"title":{},"body":{"index.html":{}}}],["doesn't",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto",{"_index":406,"title":{},"body":{"controllers/ReadTodoController.html":{},"controllers/WriteTodoController.html":{}}}],["dto.ts",{"_index":361,"title":{},"body":{"classes/IdDto.html":{},"coverage.html":{}}}],["dto.ts:5",{"_index":363,"title":{},"body":{"classes/IdDto.html":{}}}],["dto/create",{"_index":454,"title":{},"body":{"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["dto/update",{"_index":455,"title":{},"body":{"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["dtrump",{"_index":203,"title":{},"body":{"classes/BaseUserDto.html":{}}}],["dtrump'})@isoptional()@isnonemptystring",{"_index":193,"title":{},"body":{"classes/BaseUserDto.html":{},"classes/CreateUserDto.html":{}}}],["dudate",{"_index":85,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{}}}],["dudate?:date",{"_index":169,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["due",{"_index":109,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{}}}],["duedate",{"_index":499,"title":{},"body":{"entities/Todo.html":{}}}],["e2e",{"_index":920,"title":{},"body":{"index.html":{}}}],["eggs",{"_index":101,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"index.html":{}}}],["email",{"_index":182,"title":{},"body":{"classes/BaseUserDto.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"index.html":{}}}],["email:string",{"_index":202,"title":{},"body":{"classes/BaseUserDto.html":{},"entities/User.html":{}}}],["empty",{"_index":140,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/EnvironmentValidation.html":{},"classes/IdDto.html":{},"controllers/ReadTodoController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["enableimplicitconversion",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enableimplicitconversion:true",{"_index":318,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["endpoint",{"_index":657,"title":{},"body":{"controllers/WriteTodoController.html":{},"index.html":{}}}],["endpoints",{"_index":840,"title":{},"body":{"index.html":{}}}],["entities",{"_index":497,"title":{},"body":{"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/task.entity",{"_index":404,"title":{},"body":{"controllers/ReadTodoController.html":{},"modules/TasksModule.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["entities/user.entity",{"_index":589,"title":{},"body":{"modules/UsersModule.html":{}}}],["entities:[user,todo,todoversion",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":496,"title":{"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{}},"body":{"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{}}}],["entity(\"tasks",{"_index":555,"title":{},"body":{"entities/TodoVersion.html":{}}}],["entity(\"users",{"_index":575,"title":{},"body":{"entities/User.html":{}}}],["entity('todo",{"_index":533,"title":{},"body":{"entities/Todo.html":{}}}],["entity/task",{"_index":592,"title":{},"body":{"modules/VersioningModule.html":{},"injectables/VersioningService.html":{}}}],["entry",{"_index":612,"title":{},"body":{"injectables/VersioningService.html":{}}}],["enum",{"_index":119,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"entities/Todo.html":{}}}],["enum:taskpriority",{"_index":171,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["enumerations",{"_index":789,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":151,"title":{},"body":{"classes/BaseTodoDto.html":{},"entities/Todo.html":{}}}],["enums.ts",{"_index":791,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enums/task",{"_index":150,"title":{},"body":{"classes/BaseTodoDto.html":{},"entities/Todo.html":{}}}],["env",{"_index":296,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["env/environmentvalidation",{"_index":255,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["env/environmentvalidation.ts",{"_index":262,"title":{},"body":{"classes/EnvironmentValidation.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["env/environmentvalidation.ts:12",{"_index":286,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["env/environmentvalidation.ts:14",{"_index":284,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["env/environmentvalidation.ts:16",{"_index":282,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["env/environmentvalidation.ts:18",{"_index":283,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["env/environmentvalidation.ts:20",{"_index":285,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["env/environmentvalidation.ts:24",{"_index":291,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["env/environmentvalidation.ts:26",{"_index":288,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["env/environmentvalidation.ts:28",{"_index":289,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["env/environmentvalidation.ts:30",{"_index":287,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["env/environmentvalidation.ts:32",{"_index":290,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["env/environmentvalidation.ts:37",{"_index":279,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["env/environmentvalidation.ts:39",{"_index":278,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["env/environmentvalidation.ts:41",{"_index":280,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["env/environmentvalidation.ts:43",{"_index":281,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["envfilepath:\".env",{"_index":26,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["environment",{"_index":328,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["environmentvalidation",{"_index":260,"title":{"classes/EnvironmentValidation.html":{}},"body":{"classes/EnvironmentValidation.html":{},"coverage.html":{}}}],["error",{"_index":20,"title":{},"body":{"modules/AppConfigModule.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"index.html":{}}}],["error.constraints",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.property",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorformaterpipe",{"_index":724,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorformatter",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors",{"_index":319,"title":{},"body":{"classes/EnvironmentValidation.html":{},"miscellaneous/variables.html":{}}}],["errors.length",{"_index":325,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["errors.map((error",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors.tostring",{"_index":333,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["event",{"_index":996,"title":{},"body":{"license.html":{}}}],["example",{"_index":98,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"index.html":{}}}],["example:taskpriority.low",{"_index":172,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["exceptionfactory",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["executes",{"_index":696,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["existing",{"_index":889,"title":{},"body":{"index.html":{}}}],["export",{"_index":50,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentValidation.html":{},"classes/GenericPublicBaseDto.html":{},"classes/IdDto.html":{},"classes/PublicTodoDto.html":{},"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"classes/RegistryDate.html":{},"modules/TasksModule.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"classes/TodoVersionBaseDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"modules/VersioningModule.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["exports",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":753,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":209,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{}}}],["externals",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9",{"_index":872,"title":{},"body":{"index.html":{}}}],["failed",{"_index":327,"title":{},"body":{"classes/EnvironmentValidation.html":{},"miscellaneous/variables.html":{}}}],["fails",{"_index":708,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["false",{"_index":112,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"entities/Todo.html":{},"entities/User.html":{}}}],["false})@isoptional()@validatenested({each",{"_index":134,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{}}}],["fetches",{"_index":384,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["field",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentValidation.html":{},"classes/GenericPublicBaseDto.html":{},"classes/IdDto.html":{},"classes/PublicTodoDto.html":{},"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"classes/RegistryDate.html":{},"modules/TasksModule.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"classes/TodoVersionBaseDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"modules/VersioningModule.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{}}}],["files",{"_index":960,"title":{},"body":{"license.html":{}}}],["filtering",{"_index":854,"title":{},"body":{"index.html":{}}}],["final",{"_index":615,"title":{},"body":{"injectables/VersioningService.html":{}}}],["findall",{"_index":431,"title":{},"body":{"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{}}}],["findone",{"_index":432,"title":{},"body":{"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{}}}],["findone(@param('id",{"_index":461,"title":{},"body":{"controllers/ReadUsersController.html":{}}}],["findone(id",{"_index":439,"title":{},"body":{"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{}}}],["fitness",{"_index":992,"title":{},"body":{"license.html":{}}}],["focused",{"_index":823,"title":{},"body":{"index.html":{}}}],["following",{"_index":839,"title":{},"body":{"index.html":{},"license.html":{}}}],["forbidnonwhitelisted",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fork",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["format",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formater",{"_index":21,"title":{},"body":{"modules/AppConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formats",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formattederrors",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":192,"title":{},"body":{"classes/BaseUserDto.html":{},"classes/CreateUserDto.html":{},"controllers/ReadTodoController.html":{},"injectables/VersioningService.html":{},"injectables/WriteTodoService.html":{},"index.html":{}}}],["found.'})@apioperation({summary",{"_index":396,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["found.'})@apiresponse({status",{"_index":385,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["framework",{"_index":906,"title":{},"body":{"index.html":{}}}],["free",{"_index":954,"title":{},"body":{"license.html":{}}}],["function",{"_index":313,"title":{},"body":{"classes/EnvironmentValidation.html":{},"coverage.html":{}}}],["functions",{"_index":802,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":977,"title":{},"body":{"license.html":{}}}],["generate",{"_index":844,"title":{},"body":{"index.html":{}}}],["genericpublicbasedto",{"_index":338,"title":{"classes/GenericPublicBaseDto.html":{}},"body":{"classes/GenericPublicBaseDto.html":{},"coverage.html":{}}}],["get(\":id",{"_index":417,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["get(':id",{"_index":440,"title":{},"body":{"controllers/ReadUsersController.html":{}}}],["get(':id')@apiresponse({status",{"_index":394,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["get()@apiresponse({})@apioperation({summary",{"_index":383,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["getalltasks",{"_index":423,"title":{},"body":{"injectables/ReadTodoService.html":{}}}],["getting",{"_index":810,"title":{"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":855,"title":{},"body":{"index.html":{}}}],["goals",{"_index":831,"title":{},"body":{"index.html":{}}}],["granted",{"_index":953,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1010,"title":{},"body":{"modules.html":{}}}],["groceries",{"_index":155,"title":{},"body":{"classes/BaseTodoDto.html":{},"index.html":{}}}],["groceries'})@apiproperty({description",{"_index":125,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{}}}],["grow",{"_index":926,"title":{},"body":{"index.html":{}}}],["handler",{"_index":419,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["handling",{"_index":836,"title":{},"body":{"index.html":{}}}],["hash",{"_index":866,"title":{},"body":{"index.html":{}}}],["haven",{"_index":649,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["header",{"_index":881,"title":{},"body":{"index.html":{}}}],["here",{"_index":891,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":952,"title":{},"body":{"license.html":{}}}],["high",{"_index":793,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hmr",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holders",{"_index":998,"title":{},"body":{"license.html":{}}}],["host:configservice.getorthrow(\"datasource_host",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":662,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["httpcode",{"_index":654,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["httpcode(httpstatus.created",{"_index":668,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["httpexception",{"_index":661,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["https://nestjs.com",{"_index":942,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":653,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["httpstatus.bad_request",{"_index":670,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["httpstatus.created",{"_index":669,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["i'm",{"_index":814,"title":{},"body":{"index.html":{}}}],["id",{"_index":362,"title":{},"body":{"classes/IdDto.html":{},"controllers/ReadTodoController.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"entities/TodoVersion.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"index.html":{}}}],["id:number",{"_index":365,"title":{},"body":{"classes/IdDto.html":{}}}],["iddto",{"_index":359,"title":{"classes/IdDto.html":{}},"body":{"classes/IdDto.html":{},"controllers/ReadTodoController.html":{},"controllers/WriteTodoController.html":{},"coverage.html":{}}}],["identifier",{"_index":500,"title":{},"body":{"entities/Todo.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{}}}],["identifier:id",{"_index":707,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["if(!updatedtodo",{"_index":709,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["if(errors.length",{"_index":322,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["if(isnan(ttl",{"_index":37,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["if(todocount",{"_index":702,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["illustration",{"_index":830,"title":{},"body":{"index.html":{}}}],["image",{"_index":829,"title":{},"body":{"index.html":{}}}],["implement",{"_index":614,"title":{},"body":{"injectables/VersioningService.html":{},"index.html":{}}}],["implementation",{"_index":878,"title":{},"body":{"index.html":{}}}],["implied",{"_index":988,"title":{},"body":{"license.html":{}}}],["import",{"_index":7,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentValidation.html":{},"classes/IdDto.html":{},"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"classes/RegistryDate.html":{},"modules/TasksModule.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"modules/VersioningModule.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["imported",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":28,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["imports:[configmodule.forroot",{"_index":256,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["imports:[configmodule.forroot({isglobal",{"_index":23,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["imports:[typeormmodule.forfeature([todo",{"_index":495,"title":{},"body":{"modules/TasksModule.html":{}}}],["imports:[typeormmodule.forfeature([todoversion",{"_index":593,"title":{},"body":{"modules/VersioningModule.html":{}}}],["imports:[typeormmodule.forfeature([user",{"_index":590,"title":{},"body":{"modules/UsersModule.html":{}}}],["in_progress",{"_index":799,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["include",{"_index":233,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["included",{"_index":983,"title":{},"body":{"license.html":{}}}],["including",{"_index":964,"title":{},"body":{"license.html":{}}}],["index",{"_index":80,"title":{"index.html":{}},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentValidation.html":{},"classes/IdDto.html":{},"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"classes/RegistryDate.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentValidation.html":{},"classes/GenericPublicBaseDto.html":{},"classes/IdDto.html":{},"classes/PublicTodoDto.html":{},"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"classes/RegistryDate.html":{},"modules/TasksModule.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"classes/TodoVersionBaseDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"modules/VersioningModule.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["inherited",{"_index":210,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{}}}],["inject",{"_index":259,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["injectable",{"_index":420,"title":{"injectables/ReadTodoService.html":{},"injectables/ReadUsersService.html":{},"injectables/VersioningService.html":{},"injectables/WriteTodoService.html":{}},"body":{"injectables/ReadTodoService.html":{},"injectables/ReadUsersService.html":{},"injectables/VersioningService.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{}}}],["injectables",{"_index":421,"title":{},"body":{"injectables/ReadTodoService.html":{},"injectables/ReadUsersService.html":{},"injectables/VersioningService.html":{},"injectables/WriteTodoService.html":{},"overview.html":{}}}],["injected",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectrepository",{"_index":607,"title":{},"body":{"injectables/VersioningService.html":{},"injectables/WriteTodoService.html":{}}}],["injectrepository(todo",{"_index":610,"title":{},"body":{"injectables/VersioningService.html":{}}}],["input",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inserted",{"_index":543,"title":{},"body":{"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{}}}],["installation",{"_index":909,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":911,"title":{},"body":{"index.html":{}}}],["internalservererrorexception",{"_index":9,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/EnvironmentValidation.html":{},"injectables/WriteTodoService.html":{}}}],["internalservererrorexception(`error",{"_index":694,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["invalid",{"_index":639,"title":{},"body":{"controllers/WriteTodoController.html":{},"index.html":{}}}],["isemail",{"_index":198,"title":{},"body":{"classes/BaseUserDto.html":{}}}],["isemail()@isnotempty",{"_index":186,"title":{},"body":{"classes/BaseUserDto.html":{},"classes/CreateUserDto.html":{}}}],["isenum",{"_index":143,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["isenum(taskpriority",{"_index":173,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["isenum(taskstatus",{"_index":165,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["isglobal",{"_index":43,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["isglobaldata",{"_index":44,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["isnonemptypositivenumber",{"_index":277,"title":{},"body":{"classes/EnvironmentValidation.html":{},"classes/IdDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnonemptypositivenumber(validationoptions",{"_index":806,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnonemptystring",{"_index":137,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentValidation.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnonemptystring(validationoptions",{"_index":809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotempty",{"_index":199,"title":{},"body":{"classes/BaseUserDto.html":{}}}],["isoptional",{"_index":144,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{}}}],["isstrongpassword",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstrongpassword({minlength",{"_index":223,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["issues",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item",{"_index":111,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"controllers/ReadTodoController.html":{},"controllers/WriteTodoController.html":{},"index.html":{}}}],["item'})@apibody({description",{"_index":634,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["item'})@apiresponse({type",{"_index":646,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["items",{"_index":195,"title":{},"body":{"classes/BaseUserDto.html":{},"classes/CreateUserDto.html":{},"controllers/ReadTodoController.html":{}}}],["itself",{"_index":627,"title":{},"body":{"injectables/VersioningService.html":{}}}],["john",{"_index":861,"title":{},"body":{"index.html":{}}}],["john@doe.com",{"_index":863,"title":{},"body":{"index.html":{}}}],["join",{"_index":933,"title":{},"body":{"index.html":{}}}],["jordach",{"_index":949,"title":{},"body":{"license.html":{},"properties.html":{}}}],["json",{"_index":547,"title":{},"body":{"entities/TodoVersion.html":{}}}],["jwt",{"_index":873,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":939,"title":{},"body":{"index.html":{}}}],["kind",{"_index":987,"title":{},"body":{"license.html":{}}}],["leave",{"_index":875,"title":{},"body":{"index.html":{}}}],["legend",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":516,"title":{},"body":{"entities/Todo.html":{}}}],["level",{"_index":118,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{}}}],["liability",{"_index":1002,"title":{},"body":{"license.html":{}}}],["liable",{"_index":999,"title":{},"body":{"license.html":{}}}],["license",{"_index":945,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":924,"title":{},"body":{"index.html":{}}}],["limit",{"_index":413,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["limitation",{"_index":965,"title":{},"body":{"license.html":{}}}],["limited",{"_index":989,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":897,"title":{},"body":{"index.html":{}}}],["list",{"_index":132,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"controllers/ReadTodoController.html":{},"index.html":{},"properties.html":{}}}],["loaded",{"_index":39,"title":{},"body":{"modules/AppConfigModule.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{}}}],["log",{"_index":332,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["logging:false",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":842,"title":{},"body":{"index.html":{}}}],["long",{"_index":232,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["low",{"_index":796,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lowercase",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["makaya",{"_index":950,"title":{},"body":{"license.html":{},"properties.html":{}}}],["make",{"_index":864,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["manage",{"_index":819,"title":{},"body":{"index.html":{},"properties.html":{}}}],["manager",{"_index":16,"title":{},"body":{"modules/AppConfigModule.html":{},"dependencies.html":{}}}],["managing",{"_index":611,"title":{},"body":{"injectables/VersioningService.html":{},"index.html":{}}}],["manytoone",{"_index":554,"title":{},"body":{"entities/TodoVersion.html":{},"entities/User.html":{}}}],["manytoone(undefined",{"_index":550,"title":{},"body":{"entities/TodoVersion.html":{},"entities/User.html":{}}}],["matching",{"_index":53,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentValidation.html":{},"classes/GenericPublicBaseDto.html":{},"classes/IdDto.html":{},"classes/PublicTodoDto.html":{},"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"classes/RegistryDate.html":{},"modules/TasksModule.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"classes/TodoVersionBaseDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"modules/VersioningModule.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.max(...todo.versions.map(v",{"_index":622,"title":{},"body":{"injectables/VersioningService.html":{}}}],["max",{"_index":35,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["max:${max",{"_index":40,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["measures",{"_index":848,"title":{},"body":{"index.html":{}}}],["mechanism",{"_index":900,"title":{},"body":{"index.html":{}}}],["medium",{"_index":795,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["memory",{"_index":541,"title":{},"body":{"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{}}}],["merchantability",{"_index":991,"title":{},"body":{"license.html":{}}}],["merge",{"_index":968,"title":{},"body":{"license.html":{}}}],["message",{"_index":230,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GenericPublicBaseDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["message:string",{"_index":350,"title":{},"body":{"classes/GenericPublicBaseDto.html":{}}}],["metadata",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":379,"title":{},"body":{"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["milk",{"_index":100,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"index.html":{}}}],["minlength",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlowercase",{"_index":225,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minnumbers",{"_index":228,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minsymbols",{"_index":229,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minuppercase",{"_index":227,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":788,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":884,"title":{},"body":{"index.html":{}}}],["mit",{"_index":923,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mode",{"_index":915,"title":{},"body":{"index.html":{}}}],["modify",{"_index":967,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"modules/VersioningModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"modules/VersioningModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["module.hot",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"modules/VersioningModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":935,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":940,"title":{},"body":{"index.html":{}}}],["n",{"_index":335,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["name",{"_index":183,"title":{},"body":{"classes/BaseUserDto.html":{},"classes/CreateUserDto.html":{},"classes/GenericPublicBaseDto.html":{},"classes/PublicTodoDto.html":{},"controllers/ReadTodoController.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"entities/User.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name:string",{"_index":201,"title":{},"body":{"classes/BaseUserDto.html":{},"entities/User.html":{}}}],["named",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["necessary",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":613,"title":{},"body":{"injectables/VersioningService.html":{}}}],["needed",{"_index":635,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["nest",{"_index":905,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":944,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1020,"title":{},"body":{"properties.html":{}}}],["nestjs/cache",{"_index":15,"title":{},"body":{"modules/AppConfigModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":11,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentValidation.html":{},"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"modules/VersioningModule.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":13,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":18,"title":{},"body":{"modules/AppConfigModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":142,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"controllers/ReadTodoController.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/WriteTodoController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":249,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"modules/VersioningModule.html":{},"injectables/VersioningService.html":{},"injectables/WriteTodoService.html":{},"dependencies.html":{}}}],["new",{"_index":48,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/EnvironmentValidation.html":{},"injectables/ReadUsersService.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":641,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["newversion",{"_index":619,"title":{},"body":{"injectables/VersioningService.html":{}}}],["newversion.data",{"_index":624,"title":{},"body":{"injectables/VersioningService.html":{}}}],["newversion.todo",{"_index":625,"title":{},"body":{"injectables/VersioningService.html":{}}}],["newversion.version",{"_index":620,"title":{},"body":{"injectables/VersioningService.html":{}}}],["node",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["non",{"_index":139,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/EnvironmentValidation.html":{},"classes/IdDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["noninfringement",{"_index":995,"title":{},"body":{"license.html":{}}}],["not_started",{"_index":797,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":606,"title":{},"body":{"injectables/VersioningService.html":{},"injectables/WriteTodoService.html":{}}}],["notfoundexception('task",{"_index":618,"title":{},"body":{"injectables/VersioningService.html":{}}}],["notfoundexception(`todo",{"_index":703,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["nothing",{"_index":699,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["notice",{"_index":981,"title":{},"body":{"license.html":{}}}],["null",{"_index":355,"title":{},"body":{"classes/GenericPublicBaseDto.html":{},"controllers/ReadTodoController.html":{}}}],["nullable",{"_index":509,"title":{},"body":{"entities/Todo.html":{},"entities/User.html":{}}}],["number",{"_index":33,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentValidation.html":{},"classes/GenericPublicBaseDto.html":{},"classes/IdDto.html":{},"injectables/ReadUsersService.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{},"injectables/VersioningService.html":{},"injectables/WriteTodoService.html":{}}}],["object.assign(todo",{"_index":628,"title":{},"body":{"injectables/VersioningService.html":{}}}],["object.values(error.constraints",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obtaining",{"_index":957,"title":{},"body":{"license.html":{}}}],["offset",{"_index":414,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["onetomany",{"_index":528,"title":{},"body":{"entities/Todo.html":{}}}],["onetomany(undefined",{"_index":519,"title":{},"body":{"entities/Todo.html":{}}}],["op/read",{"_index":375,"title":{},"body":{"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["op/write",{"_index":493,"title":{},"body":{"modules/TasksModule.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{}}}],["open",{"_index":925,"title":{},"body":{"index.html":{}}}],["operation",{"_index":408,"title":{},"body":{"controllers/ReadTodoController.html":{},"controllers/WriteTodoController.html":{}}}],["operations",{"_index":825,"title":{},"body":{"index.html":{}}}],["optional",{"_index":84,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/GenericPublicBaseDto.html":{},"classes/PublicTodoDto.html":{},"controllers/ReadTodoController.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"entities/Todo.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"miscellaneous/functions.html":{}}}],["organize",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["otherwise",{"_index":1006,"title":{},"body":{"license.html":{}}}],["out",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1015,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":743,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pagination",{"_index":853,"title":{},"body":{"index.html":{}}}],["param",{"_index":398,"title":{},"body":{"controllers/ReadTodoController.html":{},"controllers/ReadUsersController.html":{},"controllers/WriteTodoController.html":{}}}],["parameters",{"_index":347,"title":{},"body":{"classes/GenericPublicBaseDto.html":{},"classes/PublicTodoDto.html":{},"controllers/ReadTodoController.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"miscellaneous/functions.html":{}}}],["parseint(process.env.app_cache_max",{"_index":36,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["parseint(process.env.app_cache_ttl",{"_index":34,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["part",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partial",{"_index":370,"title":{},"body":{"classes/PublicTodoDto.html":{},"entities/TodoVersion.html":{},"injectables/VersioningService.html":{}}}],["partialtype",{"_index":561,"title":{},"body":{"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(basetododto",{"_index":560,"title":{},"body":{"classes/UpdateTodoDto.html":{}}}],["partialtype(baseuserdto",{"_index":563,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["particular",{"_index":993,"title":{},"body":{"license.html":{}}}],["password",{"_index":222,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"index.html":{}}}],["password:configservice.getorthrow(\"datasource_password",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password:string",{"_index":579,"title":{},"body":{"entities/User.html":{}}}],["password@201",{"_index":238,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["patch",{"_index":450,"title":{},"body":{"controllers/ReadUsersController.html":{},"controllers/WriteTodoController.html":{}}}],["patch(':id",{"_index":447,"title":{},"body":{"controllers/ReadUsersController.html":{},"controllers/WriteTodoController.html":{}}}],["pending",{"_index":800,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["perform",{"_index":96,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{}}}],["permission",{"_index":951,"title":{},"body":{"license.html":{}}}],["permit",{"_index":975,"title":{},"body":{"license.html":{}}}],["person",{"_index":956,"title":{},"body":{"license.html":{}}}],["persons",{"_index":976,"title":{},"body":{"license.html":{}}}],["pg",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":22,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["pipe.ts",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["plaintoinstance",{"_index":292,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["plaintoinstance(environmentvalidation",{"_index":317,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["please",{"_index":934,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["port:configservice.getorthrow(\"datasource_port",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":985,"title":{},"body":{"license.html":{}}}],["positive.int",{"_index":294,"title":{},"body":{"classes/EnvironmentValidation.html":{},"classes/IdDto.html":{}}}],["positive.int.ts",{"_index":716,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["post",{"_index":436,"title":{},"body":{"controllers/ReadUsersController.html":{},"controllers/WriteTodoController.html":{},"index.html":{}}}],["post()@httpcode(httpstatus.created)@apioperation({summary",{"_index":633,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["prefix",{"_index":377,"title":{},"body":{"controllers/ReadTodoController.html":{},"controllers/ReadUsersController.html":{},"entities/Todo.html":{},"entities/User.html":{},"controllers/WriteTodoController.html":{}}}],["prefix:false",{"_index":583,"title":{},"body":{"entities/User.html":{}}}],["preload",{"_index":704,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["prettier",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["previous",{"_index":820,"title":{},"body":{"index.html":{}}}],["primarygeneratedcolumn",{"_index":506,"title":{},"body":{"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{}}}],["priority",{"_index":86,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"entities/Todo.html":{}}}],["priority?:taskpriority",{"_index":174,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["private",{"_index":609,"title":{},"body":{"injectables/VersioningService.html":{},"injectables/WriteTodoService.html":{}}}],["process.env['swagger_description",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env['swagger_licence",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env['swagger_licence_url",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env['swagger_path",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env['swagger_server",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env['swagger_title",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env['swagger_version",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":917,"title":{},"body":{"index.html":{}}}],["profile",{"_index":190,"title":{},"body":{"classes/BaseUserDto.html":{},"classes/CreateUserDto.html":{}}}],["profilename",{"_index":184,"title":{},"body":{"classes/BaseUserDto.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["profilename:string",{"_index":581,"title":{},"body":{"entities/User.html":{}}}],["profilename?:string",{"_index":204,"title":{},"body":{"classes/BaseUserDto.html":{}}}],["project",{"_index":811,"title":{},"body":{"index.html":{}}}],["projects",{"_index":822,"title":{},"body":{"index.html":{}}}],["promise",{"_index":605,"title":{},"body":{"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["proper",{"_index":852,"title":{},"body":{"index.html":{}}}],["properties",{"_index":81,"title":{"properties.html":{}},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentValidation.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":46,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["provided",{"_index":191,"title":{},"body":{"classes/BaseUserDto.html":{},"classes/CreateUserDto.html":{},"controllers/ReadTodoController.html":{},"controllers/WriteTodoController.html":{},"license.html":{}}}],["providers",{"_index":45,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":340,"title":{},"body":{"classes/GenericPublicBaseDto.html":{},"coverage.html":{}}}],["publictododto",{"_index":366,"title":{"classes/PublicTodoDto.html":{}},"body":{"classes/PublicTodoDto.html":{},"coverage.html":{}}}],["publish",{"_index":969,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":994,"title":{},"body":{"license.html":{}}}],["query",{"_index":391,"title":{},"body":{"controllers/ReadTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["random",{"_index":874,"title":{},"body":{"index.html":{}}}],["rate",{"_index":896,"title":{},"body":{"index.html":{}}}],["read",{"_index":331,"title":{},"body":{"classes/EnvironmentValidation.html":{},"controllers/ReadTodoController.html":{},"controllers/ReadUsersController.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["read/todos",{"_index":378,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["readonly",{"_index":82,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"controllers/ReadTodoController.html":{},"controllers/ReadUsersController.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["readtaskservice",{"_index":410,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["readtodocontroller",{"_index":373,"title":{"controllers/ReadTodoController.html":{}},"body":{"controllers/ReadTodoController.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["readtodoservice",{"_index":399,"title":{"injectables/ReadTodoService.html":{}},"body":{"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["readuserscontroller",{"_index":426,"title":{"controllers/ReadUsersController.html":{}},"body":{"controllers/ReadUsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["readusersservice",{"_index":452,"title":{"injectables/ReadUsersService.html":{}},"body":{"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["received",{"_index":880,"title":{},"body":{"index.html":{}}}],["recognize",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["record",{"_index":315,"title":{},"body":{"classes/EnvironmentValidation.html":{},"miscellaneous/functions.html":{}}}],["reflect",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":899,"title":{},"body":{"index.html":{}}}],["register",{"_index":859,"title":{},"body":{"index.html":{}}}],["registration",{"_index":841,"title":{},"body":{"index.html":{}}}],["registry",{"_index":501,"title":{},"body":{"entities/Todo.html":{},"entities/User.html":{}}}],["registry:registrydate",{"_index":538,"title":{},"body":{"entities/Todo.html":{},"entities/User.html":{}}}],["registrydate",{"_index":477,"title":{"classes/RegistryDate.html":{}},"body":{"classes/RegistryDate.html":{},"entities/Todo.html":{},"entities/User.html":{},"coverage.html":{}}}],["registrydate,{prefix:false",{"_index":537,"title":{},"body":{"entities/Todo.html":{}}}],["related",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":433,"title":{},"body":{"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["remove(@param('id",{"_index":465,"title":{},"body":{"controllers/ReadUsersController.html":{},"controllers/WriteTodoController.html":{}}}],["remove(id",{"_index":442,"title":{},"body":{"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["removes",{"_index":476,"title":{},"body":{"injectables/ReadUsersService.html":{},"injectables/WriteTodoService.html":{}}}],["repository",{"_index":598,"title":{},"body":{"injectables/VersioningService.html":{},"injectables/WriteTodoService.html":{},"index.html":{}}}],["request",{"_index":665,"title":{},"body":{"controllers/WriteTodoController.html":{},"index.html":{}}}],["require",{"_index":826,"title":{},"body":{"index.html":{}}}],["required",{"_index":97,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"index.html":{}}}],["required:false",{"_index":163,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["required:true",{"_index":157,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["requirement",{"_index":890,"title":{},"body":{"index.html":{}}}],["requirements",{"_index":838,"title":{},"body":{"index.html":{}}}],["reset",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["respond",{"_index":869,"title":{},"body":{"index.html":{}}}],["response",{"_index":858,"title":{},"body":{"index.html":{}}}],["restful",{"_index":816,"title":{},"body":{"index.html":{},"properties.html":{}}}],["restriction",{"_index":963,"title":{},"body":{"license.html":{}}}],["result",{"_index":652,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["results",{"_index":52,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentValidation.html":{},"classes/GenericPublicBaseDto.html":{},"classes/IdDto.html":{},"classes/PublicTodoDto.html":{},"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"classes/RegistryDate.html":{},"modules/TasksModule.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"classes/TodoVersionBaseDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"modules/VersioningModule.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieved",{"_index":387,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["return",{"_index":42,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/EnvironmentValidation.html":{},"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":392,"title":{},"body":{"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["rights",{"_index":966,"title":{},"body":{"license.html":{}}}],["roadma.sh",{"_index":813,"title":{},"body":{"index.html":{}}}],["run",{"_index":773,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["rxjs",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":711,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["schema",{"_index":833,"title":{},"body":{"index.html":{}}}],["script",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["security",{"_index":837,"title":{},"body":{"index.html":{}}}],["sell",{"_index":973,"title":{},"body":{"license.html":{}}}],["send",{"_index":879,"title":{},"body":{"index.html":{}}}],["service",{"_index":425,"title":{},"body":{"injectables/ReadTodoService.html":{}}}],["setdescription(swagger_description",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setlicense(swagger_licence",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle(swagger_title",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion(swagger_version",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":982,"title":{},"body":{"license.html":{}}}],["skills",{"_index":832,"title":{},"body":{"index.html":{}}}],["skipmissingproperties:false",{"_index":321,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["software",{"_index":959,"title":{},"body":{"license.html":{}}}],["sorting",{"_index":893,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentValidation.html":{},"classes/GenericPublicBaseDto.html":{},"classes/IdDto.html":{},"classes/PublicTodoDto.html":{},"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"classes/RegistryDate.html":{},"modules/TasksModule.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"classes/TodoVersionBaseDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"modules/VersioningModule.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"index.html":{}}}],["special",{"_index":236,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["sponsors",{"_index":928,"title":{},"body":{"index.html":{}}}],["sql",{"_index":697,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["src/.../database",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.swagger.ts",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environmentvalidation.ts",{"_index":805,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../error",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../is",{"_index":804,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":803,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../swagger.document.ts",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task",{"_index":790,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/decorators/is",{"_index":715,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/dtos/id",{"_index":360,"title":{},"body":{"classes/IdDto.html":{},"coverage.html":{}}}],["src/common/embedded/registry",{"_index":478,"title":{},"body":{"classes/RegistryDate.html":{},"coverage.html":{}}}],["src/configuration/app/app.config.module.ts",{"_index":6,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["src/configuration/app/error",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configuration/db/database",{"_index":727,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configuration/swagger/env.swagger.ts",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configuration/swagger/swagger.document.ts",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module.ts",{"_index":246,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/main.ts",{"_index":734,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/tasks/dto/base",{"_index":78,"title":{},"body":{"classes/BaseTodoDto.html":{},"coverage.html":{}}}],["src/tasks/dto/create",{"_index":208,"title":{},"body":{"classes/CreateTodoDto.html":{},"coverage.html":{}}}],["src/tasks/dto/generic",{"_index":339,"title":{},"body":{"classes/GenericPublicBaseDto.html":{},"coverage.html":{}}}],["src/tasks/dto/public",{"_index":367,"title":{},"body":{"classes/PublicTodoDto.html":{},"coverage.html":{}}}],["src/tasks/dto/update",{"_index":559,"title":{},"body":{"classes/UpdateTodoDto.html":{},"coverage.html":{}}}],["src/tasks/entities/task.entity.ts",{"_index":498,"title":{},"body":{"entities/Todo.html":{},"coverage.html":{}}}],["src/tasks/entities/task.entity.ts:21",{"_index":507,"title":{},"body":{"entities/Todo.html":{}}}],["src/tasks/entities/task.entity.ts:23",{"_index":518,"title":{},"body":{"entities/Todo.html":{}}}],["src/tasks/entities/task.entity.ts:25",{"_index":503,"title":{},"body":{"entities/Todo.html":{}}}],["src/tasks/entities/task.entity.ts:28",{"_index":514,"title":{},"body":{"entities/Todo.html":{}}}],["src/tasks/entities/task.entity.ts:32",{"_index":505,"title":{},"body":{"entities/Todo.html":{}}}],["src/tasks/entities/task.entity.ts:35",{"_index":511,"title":{},"body":{"entities/Todo.html":{}}}],["src/tasks/entities/task.entity.ts:39",{"_index":524,"title":{},"body":{"entities/Todo.html":{}}}],["src/tasks/entities/task.entity.ts:42",{"_index":521,"title":{},"body":{"entities/Todo.html":{}}}],["src/tasks/entities/task.entity.ts:45",{"_index":513,"title":{},"body":{"entities/Todo.html":{}}}],["src/tasks/enums/task",{"_index":792,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/tasks/read",{"_index":374,"title":{},"body":{"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"coverage.html":{}}}],["src/tasks/tasks.module.ts",{"_index":490,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/tasks/write",{"_index":630,"title":{},"body":{"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{}}}],["src/users/dto/base",{"_index":180,"title":{},"body":{"classes/BaseUserDto.html":{},"coverage.html":{}}}],["src/users/dto/create",{"_index":221,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":562,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":564,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:10",{"_index":567,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:13",{"_index":566,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:16",{"_index":568,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:19",{"_index":570,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:22",{"_index":573,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:25",{"_index":571,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":574,"title":{},"body":{"entities/User.html":{}}}],["src/users/read",{"_index":427,"title":{},"body":{"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"coverage.html":{}}}],["src/users/users.module.ts",{"_index":587,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/validate",{"_index":261,"title":{},"body":{"classes/EnvironmentValidation.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/versioning/dto/todo",{"_index":557,"title":{},"body":{"classes/TodoVersionBaseDto.html":{},"coverage.html":{}}}],["src/versioning/entity/task",{"_index":544,"title":{},"body":{"entities/TodoVersion.html":{},"coverage.html":{}}}],["src/versioning/versioning.module.ts",{"_index":591,"title":{},"body":{"modules/VersioningModule.html":{}}}],["src/versioning/versioning.service.ts",{"_index":595,"title":{},"body":{"injectables/VersioningService.html":{},"coverage.html":{}}}],["src/versioning/versioning.service.ts:17",{"_index":604,"title":{},"body":{"injectables/VersioningService.html":{}}}],["src/versioning/versioning.service.ts:8",{"_index":600,"title":{},"body":{"injectables/VersioningService.html":{}}}],["standard",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":913,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":916,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":918,"title":{},"body":{"index.html":{}}}],["started",{"_index":798,"title":{"index.html":{},"license.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["starter",{"_index":908,"title":{},"body":{"index.html":{}}}],["statements",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":87,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"controllers/ReadTodoController.html":{},"entities/Todo.html":{},"controllers/WriteTodoController.html":{},"index.html":{}}}],["status:200",{"_index":675,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["status:204",{"_index":677,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["status?:taskstatus",{"_index":167,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["statuscode",{"_index":348,"title":{},"body":{"classes/GenericPublicBaseDto.html":{}}}],["statuscode:number",{"_index":349,"title":{},"body":{"classes/GenericPublicBaseDto.html":{}}}],["statuscode:number=200,private",{"_index":353,"title":{},"body":{"classes/GenericPublicBaseDto.html":{}}}],["stay",{"_index":936,"title":{},"body":{"index.html":{}}}],["steps",{"_index":330,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["store",{"_index":850,"title":{},"body":{"index.html":{}}}],["storing",{"_index":868,"title":{},"body":{"index.html":{}}}],["string",{"_index":92,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentValidation.html":{},"classes/GenericPublicBaseDto.html":{},"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"entities/Todo.html":{},"entities/User.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"index.html":{}}}],["string.ts",{"_index":718,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["structured",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject",{"_index":978,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":971,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":984,"title":{},"body":{"license.html":{}}}],["success\",private",{"_index":354,"title":{},"body":{"classes/GenericPublicBaseDto.html":{}}}],["successful",{"_index":871,"title":{},"body":{"index.html":{}}}],["successfully",{"_index":336,"title":{},"body":{"classes/EnvironmentValidation.html":{},"controllers/ReadTodoController.html":{},"controllers/WriteTodoController.html":{}}}],["summary",{"_index":411,"title":{},"body":{"controllers/ReadTodoController.html":{},"controllers/WriteTodoController.html":{}}}],["supermarket",{"_index":159,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["supermarket.'})@apiproperty({description",{"_index":103,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{}}}],["support",{"_index":929,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":865,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":1014,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":302,"title":{},"body":{"classes/EnvironmentValidation.html":{},"dependencies.html":{}}}],["swagger_description",{"_index":272,"title":{},"body":{"classes/EnvironmentValidation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_description:string",{"_index":306,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["swagger_licence",{"_index":273,"title":{},"body":{"classes/EnvironmentValidation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_licence:string",{"_index":304,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["swagger_licence_url",{"_index":274,"title":{},"body":{"classes/EnvironmentValidation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_licence_url:string",{"_index":305,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["swagger_path",{"_index":730,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_server",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_title",{"_index":275,"title":{},"body":{"classes/EnvironmentValidation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_title:string",{"_index":307,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["swagger_version",{"_index":276,"title":{},"body":{"classes/EnvironmentValidation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_version:string",{"_index":303,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["swaggerconfig",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["synchronize:true",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":345,"title":{},"body":{"classes/GenericPublicBaseDto.html":{}}}],["table",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":95,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"controllers/ReadTodoController.html":{},"injectables/ReadTodoService.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["taskpriority",{"_index":117,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"entities/Todo.html":{},"miscellaneous/enumerations.html":{}}}],["tasks/entities/task.entity",{"_index":200,"title":{},"body":{"classes/BaseUserDto.html":{},"entities/TodoVersion.html":{},"entities/User.html":{},"injectables/VersioningService.html":{}}}],["tasks/tasks.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["tasksmodule",{"_index":63,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["taskstatus",{"_index":122,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"entities/Todo.html":{},"miscellaneous/enumerations.html":{}}}],["taskstatus.in_progress",{"_index":164,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["terminated",{"_index":801,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":919,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":922,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":921,"title":{},"body":{"index.html":{}}}],["tests",{"_index":895,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":927,"title":{},"body":{"index.html":{}}}],["this.data",{"_index":358,"title":{},"body":{"classes/GenericPublicBaseDto.html":{}}}],["this.message",{"_index":357,"title":{},"body":{"classes/GenericPublicBaseDto.html":{}}}],["this.name",{"_index":584,"title":{},"body":{"entities/User.html":{}}}],["this.readtaskservice.getalltasks",{"_index":416,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["this.statuscode",{"_index":356,"title":{},"body":{"classes/GenericPublicBaseDto.html":{}}}],["this.title",{"_index":540,"title":{},"body":{"entities/Todo.html":{}}}],["this.todorepository.count({where",{"_index":701,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["this.todorepository.create(createtaskdto",{"_index":691,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["this.todorepository.findoneby({identifier:id",{"_index":617,"title":{},"body":{"injectables/VersioningService.html":{}}}],["this.todorepository.preload",{"_index":706,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["this.todorepository.save(todo",{"_index":629,"title":{},"body":{"injectables/VersioningService.html":{},"injectables/WriteTodoService.html":{}}}],["this.todorepository.save(updatedtodo",{"_index":710,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":459,"title":{},"body":{"controllers/ReadUsersController.html":{}}}],["this.usersservice.findall",{"_index":460,"title":{},"body":{"controllers/ReadUsersController.html":{}}}],["this.usersservice.findone(+id",{"_index":462,"title":{},"body":{"controllers/ReadUsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":466,"title":{},"body":{"controllers/ReadUsersController.html":{}}}],["this.usersservice.update(+id",{"_index":464,"title":{},"body":{"controllers/ReadUsersController.html":{}}}],["this.version",{"_index":556,"title":{},"body":{"entities/TodoVersion.html":{}}}],["this.versioningtodorepository.save(newversion",{"_index":626,"title":{},"body":{"injectables/VersioningService.html":{}}}],["this.writetodoservice.create(createtododto",{"_index":673,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["this.writetodoservice.remove(+id",{"_index":681,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["this.writetodoservice.update(id",{"_index":680,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["throttling",{"_index":898,"title":{},"body":{"index.html":{}}}],["throw",{"_index":324,"title":{},"body":{"classes/EnvironmentValidation.html":{},"injectables/VersioningService.html":{},"injectables/WriteTodoService.html":{},"miscellaneous/variables.html":{}}}],["thrown",{"_index":666,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["throws",{"_index":660,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["title",{"_index":88,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"entities/Todo.html":{},"index.html":{}}}],["title:string",{"_index":158,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["to.dto.ts",{"_index":368,"title":{},"body":{"classes/PublicTodoDto.html":{},"coverage.html":{}}}],["to.dto.ts:3",{"_index":371,"title":{},"body":{"classes/PublicTodoDto.html":{}}}],["todo",{"_index":110,"title":{"entities/Todo.html":{}},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"controllers/ReadTodoController.html":{},"modules/TasksModule.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{}}}],["todo.controller",{"_index":494,"title":{},"body":{"modules/TasksModule.html":{}}}],["todo.controller.ts",{"_index":376,"title":{},"body":{"controllers/ReadTodoController.html":{},"controllers/WriteTodoController.html":{},"coverage.html":{}}}],["todo.controller.ts:21",{"_index":390,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["todo.controller.ts:34",{"_index":397,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["todo.controller.ts:55",{"_index":640,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["todo.controller.ts:77",{"_index":651,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["todo.controller.ts:82",{"_index":642,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["todo.dto",{"_index":219,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/UpdateTodoDto.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["todo.dto.ts",{"_index":79,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"classes/UpdateTodoDto.html":{},"coverage.html":{}}}],["todo.dto.ts:18",{"_index":126,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["todo.dto.ts:26",{"_index":107,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["todo.dto.ts:36",{"_index":124,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["todo.dto.ts:46",{"_index":116,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["todo.dto.ts:56",{"_index":121,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["todo.dto.ts:65",{"_index":130,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["todo.dto.ts:74",{"_index":136,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["todo.service",{"_index":400,"title":{},"body":{"controllers/ReadTodoController.html":{},"modules/TasksModule.html":{},"controllers/WriteTodoController.html":{}}}],["todo.service.ts",{"_index":422,"title":{},"body":{"injectables/ReadTodoService.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{}}}],["todo.service.ts:12",{"_index":685,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["todo.service.ts:24",{"_index":689,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["todo.service.ts:48",{"_index":688,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["todo.service.ts:7",{"_index":424,"title":{},"body":{"injectables/ReadTodoService.html":{}}}],["todo.service.ts:9",{"_index":683,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["todo.user",{"_index":572,"title":{},"body":{"entities/User.html":{}}}],["todo.versions",{"_index":551,"title":{},"body":{"entities/TodoVersion.html":{}}}],["todo.versions.length",{"_index":621,"title":{},"body":{"injectables/VersioningService.html":{}}}],["todobyid",{"_index":381,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["todobyid(@param",{"_index":418,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["todobyid(undefined",{"_index":393,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["todocount",{"_index":700,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["todorepository",{"_index":599,"title":{},"body":{"injectables/VersioningService.html":{},"injectables/WriteTodoService.html":{}}}],["todos",{"_index":185,"title":{},"body":{"classes/BaseUserDto.html":{},"classes/CreateUserDto.html":{},"controllers/ReadTodoController.html":{},"entities/User.html":{},"index.html":{}}}],["todos:todo",{"_index":582,"title":{},"body":{"entities/User.html":{}}}],["todos?:todo",{"_index":206,"title":{},"body":{"classes/BaseUserDto.html":{}}}],["todoversion",{"_index":522,"title":{"entities/TodoVersion.html":{}},"body":{"entities/Todo.html":{},"entities/TodoVersion.html":{},"modules/VersioningModule.html":{},"injectables/VersioningService.html":{},"coverage.html":{}}}],["todoversionbasedto",{"_index":131,"title":{"classes/TodoVersionBaseDto.html":{}},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"classes/TodoVersionBaseDto.html":{},"coverage.html":{}}}],["todo})@apiresponse({status",{"_index":395,"title":{},"body":{"controllers/ReadTodoController.html":{},"controllers/WriteTodoController.html":{}}}],["token",{"_index":845,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1005,"title":{},"body":{"license.html":{}}}],["touch",{"_index":937,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformer",{"_index":147,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/EnvironmentValidation.html":{},"dependencies.html":{}}}],["transformoptions",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":24,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"entities/Todo.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["true})@isnonemptystring",{"_index":105,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{}}}],["true})@type(undefined",{"_index":135,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{}}}],["true})@validatenested()@type(undefined",{"_index":129,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{}}}],["try",{"_index":692,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["ts",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["ttl",{"_index":32,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["ttl:${ttl}ms",{"_index":41,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["twitter",{"_index":943,"title":{},"body":{"index.html":{}}}],["type",{"_index":91,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentValidation.html":{},"classes/GenericPublicBaseDto.html":{},"classes/IdDto.html":{},"classes/PublicTodoDto.html":{},"controllers/ReadTodoController.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"classes/RegistryDate.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type:\"enum\",enum:taskstatus,default:taskstatus.not_started,nullable",{"_index":534,"title":{},"body":{"entities/Todo.html":{}}}],["type:\"postgres",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type:[todo",{"_index":205,"title":{},"body":{"classes/BaseUserDto.html":{}}}],["type:todo",{"_index":671,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["typeorm",{"_index":486,"title":{},"body":{"classes/RegistryDate.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{},"injectables/VersioningService.html":{},"injectables/WriteTodoService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":248,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"modules/VersioningModule.html":{}}}],["typeormmodule.forrootasync",{"_index":258,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":907,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["typescript's",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":887,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":133,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"entities/Todo.html":{},"controllers/WriteTodoController.html":{}}}],["undefined})@apiresponse({status",{"_index":388,"title":{},"body":{"controllers/ReadTodoController.html":{}}}],["undefined})@isoptional()@isenum(taskpriority",{"_index":120,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{}}}],["undefined})@isoptional()@isenum(taskstatus)@apiproperty({description",{"_index":123,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{}}}],["undefined})@isoptional()@type(undefined)@validatenested({each",{"_index":196,"title":{},"body":{"classes/BaseUserDto.html":{},"classes/CreateUserDto.html":{}}}],["unique",{"_index":189,"title":{},"body":{"classes/BaseUserDto.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"index.html":{}}}],["unit",{"_index":894,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":687,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["up",{"_index":876,"title":{},"body":{"index.html":{}}}],["update",{"_index":434,"title":{},"body":{"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"injectables/VersioningService.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"index.html":{}}}],["update(@param",{"_index":678,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["update(@param('id",{"_index":463,"title":{},"body":{"controllers/ReadUsersController.html":{}}}],["update(id",{"_index":445,"title":{},"body":{"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"injectables/WriteTodoService.html":{}}}],["update(undefined",{"_index":643,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["updated",{"_index":542,"title":{},"body":{"entities/Todo.html":{},"entities/TodoVersion.html":{},"entities/User.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["updatedat",{"_index":481,"title":{},"body":{"classes/RegistryDate.html":{}}}],["updatedata",{"_index":603,"title":{},"body":{"injectables/VersioningService.html":{}}}],["updatedatecolumn",{"_index":484,"title":{},"body":{"classes/RegistryDate.html":{}}}],["updatedtodo",{"_index":705,"title":{},"body":{"injectables/WriteTodoService.html":{}}}],["updates",{"_index":475,"title":{},"body":{"injectables/ReadUsersService.html":{}}}],["updatetask",{"_index":596,"title":{},"body":{"injectables/VersioningService.html":{}}}],["updatetask(id",{"_index":602,"title":{},"body":{"injectables/VersioningService.html":{}}}],["updatetaskdto",{"_index":644,"title":{},"body":{"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{}}}],["updatetododto",{"_index":558,"title":{"classes/UpdateTodoDto.html":{}},"body":{"classes/UpdateTodoDto.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{}}}],["updatetododto):promise",{"_index":679,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["updateuserdto",{"_index":446,"title":{"classes/UpdateUserDto.html":{}},"body":{"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["upon",{"_index":888,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["use",{"_index":849,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":870,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":29,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/DatabaseModule.html":{}}}],["user",{"_index":89,"title":{"entities/User.html":{}},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"injectables/ReadUsersService.html":{},"entities/Todo.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"index.html":{}}}],["user.dto",{"_index":149,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateUserDto.html":{},"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts",{"_index":181,"title":{},"body":{"classes/BaseUserDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":187,"title":{},"body":{"classes/BaseUserDto.html":{}}}],["user.dto.ts:17",{"_index":239,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":194,"title":{},"body":{"classes/BaseUserDto.html":{}}}],["user.dto.ts:32",{"_index":197,"title":{},"body":{"classes/BaseUserDto.html":{}}}],["user.dto.ts:9",{"_index":188,"title":{},"body":{"classes/BaseUserDto.html":{}}}],["user.todos",{"_index":520,"title":{},"body":{"entities/Todo.html":{}}}],["user:baseuserdto",{"_index":176,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["user:user",{"_index":536,"title":{},"body":{"entities/Todo.html":{}}}],["userid",{"_index":565,"title":{},"body":{"entities/User.html":{}}}],["userid:number",{"_index":576,"title":{},"body":{"entities/User.html":{}}}],["username:configservice.getorthrow(\"datasource_username",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["users",{"_index":429,"title":{},"body":{"controllers/ReadUsersController.html":{},"injectables/ReadUsersService.html":{},"index.html":{},"properties.html":{}}}],["users.controller",{"_index":588,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.controller.ts",{"_index":428,"title":{},"body":{"controllers/ReadUsersController.html":{},"coverage.html":{}}}],["users.controller.ts:11",{"_index":437,"title":{},"body":{"controllers/ReadUsersController.html":{}}}],["users.controller.ts:16",{"_index":438,"title":{},"body":{"controllers/ReadUsersController.html":{}}}],["users.controller.ts:21",{"_index":441,"title":{},"body":{"controllers/ReadUsersController.html":{}}}],["users.controller.ts:26",{"_index":448,"title":{},"body":{"controllers/ReadUsersController.html":{}}}],["users.controller.ts:31",{"_index":444,"title":{},"body":{"controllers/ReadUsersController.html":{}}}],["users.service",{"_index":453,"title":{},"body":{"controllers/ReadUsersController.html":{},"modules/UsersModule.html":{}}}],["users.service.ts",{"_index":467,"title":{},"body":{"injectables/ReadUsersService.html":{},"coverage.html":{}}}],["users.service.ts:11",{"_index":469,"title":{},"body":{"injectables/ReadUsersService.html":{}}}],["users.service.ts:15",{"_index":470,"title":{},"body":{"injectables/ReadUsersService.html":{}}}],["users.service.ts:19",{"_index":472,"title":{},"body":{"injectables/ReadUsersService.html":{}}}],["users.service.ts:23",{"_index":471,"title":{},"body":{"injectables/ReadUsersService.html":{}}}],["users.service.ts:7",{"_index":468,"title":{},"body":{"injectables/ReadUsersService.html":{}}}],["users/dto/base",{"_index":148,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["users/entities/user.entity",{"_index":532,"title":{},"body":{"entities/Todo.html":{}}}],["users/users.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["usersmodule",{"_index":64,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":457,"title":{},"body":{"controllers/ReadUsersController.html":{}}}],["usevalue",{"_index":47,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["using",{"_index":860,"title":{},"body":{"index.html":{}}}],["v.version",{"_index":623,"title":{},"body":{"injectables/VersioningService.html":{}}}],["validate",{"_index":254,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["validate:validatedenvvariables",{"_index":257,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["validated",{"_index":337,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["validatedconfig",{"_index":316,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["validatedenvvariables",{"_index":253,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validatedenvvariables(config",{"_index":314,"title":{},"body":{"classes/EnvironmentValidation.html":{},"miscellaneous/functions.html":{}}}],["validatenested",{"_index":145,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{}}}],["validatenested({each:true",{"_index":178,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{}}}],["validatesync",{"_index":293,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["validatesync(validatedconfig",{"_index":320,"title":{},"body":{"classes/EnvironmentValidation.html":{}}}],["validation",{"_index":329,"title":{},"body":{"classes/EnvironmentValidation.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["validationerror",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":807,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validationpipe",{"_index":10,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validationpipe(validationpipeoptions",{"_index":49,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validationpipeoptions",{"_index":19,"title":{},"body":{"modules/AppConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":146,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/BaseUserDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentValidation.html":{},"dependencies.html":{}}}],["value",{"_index":794,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":515,"title":{},"body":{"entities/Todo.html":{}}}],["variable",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":326,"title":{"miscellaneous/variables.html":{}},"body":{"classes/EnvironmentValidation.html":{},"miscellaneous/variables.html":{}}}],["vercel",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["version",{"_index":153,"title":{},"body":{"classes/BaseTodoDto.html":{},"entities/Todo.html":{},"entities/TodoVersion.html":{},"classes/TodoVersionBaseDto.html":{},"injectables/VersioningService.html":{},"coverage.html":{},"properties.html":{}}}],["version.entity",{"_index":531,"title":{},"body":{"entities/Todo.html":{},"modules/VersioningModule.html":{},"injectables/VersioningService.html":{}}}],["version.entity.ts",{"_index":545,"title":{},"body":{"entities/TodoVersion.html":{},"coverage.html":{}}}],["version.entity.ts:17",{"_index":549,"title":{},"body":{"entities/TodoVersion.html":{}}}],["version.entity.ts:20",{"_index":553,"title":{},"body":{"entities/TodoVersion.html":{}}}],["version.entity.ts:23",{"_index":548,"title":{},"body":{"entities/TodoVersion.html":{}}}],["version.entity.ts:26",{"_index":552,"title":{},"body":{"entities/TodoVersion.html":{}}}],["version.entity.ts:29",{"_index":546,"title":{},"body":{"entities/TodoVersion.html":{}}}],["version.todo",{"_index":523,"title":{},"body":{"entities/Todo.html":{}}}],["versioning/dto/todo",{"_index":152,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["versioning/entity/task",{"_index":530,"title":{},"body":{"entities/Todo.html":{}}}],["versioning/versioning.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["versioningmodule",{"_index":65,"title":{"modules/VersioningModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VersioningModule.html":{},"modules.html":{},"overview.html":{}}}],["versioningservice",{"_index":594,"title":{"injectables/VersioningService.html":{}},"body":{"injectables/VersioningService.html":{},"coverage.html":{}}}],["versioningtodorepository",{"_index":601,"title":{},"body":{"injectables/VersioningService.html":{}}}],["versions",{"_index":90,"title":{},"body":{"classes/BaseTodoDto.html":{},"classes/CreateTodoDto.html":{},"entities/Todo.html":{},"injectables/VersioningService.html":{}}}],["versions:todoversionbasedto",{"_index":179,"title":{},"body":{"classes/BaseTodoDto.html":{}}}],["warranties",{"_index":990,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":986,"title":{},"body":{"license.html":{}}}],["watch",{"_index":914,"title":{},"body":{"index.html":{}}}],["webpack",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["webpack's",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["website",{"_index":941,"title":{},"body":{"index.html":{}}}],["well",{"_index":828,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1003,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":962,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["workflow",{"_index":904,"title":{},"body":{"index.html":{}}}],["write",{"_index":492,"title":{},"body":{"modules/TasksModule.html":{},"controllers/WriteTodoController.html":{}}}],["write/todos",{"_index":631,"title":{},"body":{"controllers/WriteTodoController.html":{}}}],["writetodocontroller",{"_index":491,"title":{"controllers/WriteTodoController.html":{}},"body":{"modules/TasksModule.html":{},"controllers/WriteTodoController.html":{},"coverage.html":{}}}],["writetodoservice",{"_index":489,"title":{"injectables/WriteTodoService.html":{}},"body":{"modules/TasksModule.html":{},"controllers/WriteTodoController.html":{},"injectables/WriteTodoService.html":{},"coverage.html":{},"overview.html":{}}}],["yarn",{"_index":910,"title":{},"body":{"index.html":{}}}],["yes",{"_index":808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["you'd",{"_index":932,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppConfigModule.html":{"url":"modules/AppConfigModule.html","title":"module - AppConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    AppConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/configuration/app/app.config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {\n InternalServerErrorException,\n  Module,\n  ValidationPipe,\n} from \"@nestjs/common\";\nimport { ConfigModule } from \"@nestjs/config\";\nimport { CacheModule } from \"@nestjs/cache-manager\";\nimport { APP_PIPE } from \"@nestjs/core\";\nimport { validationPipeOptions } from \"./error-formater-pipe\";\n\n\n\n\n@Module({\n  imports:[ConfigModule.forRoot({isGlobal: true, cache:true, envFilePath:\".env\"}),\n  CacheModule.registerAsync({\n    imports: [ConfigModule],\n    useFactory: async () => {\n\n      const ttl: number = parseInt(process.env.APP_CACHE_TTL)\n      const max: number = parseInt(process.env.APP_CACHE_MAX)\n\n      if(isNaN(ttl) || ttl  Cache TTL and Cache MAX loaded | { Max:${max} Ttl:${ttl}ms ` )\n\n      return {\n        isGlobal: true,\n        isGlobalData: true,\n        ttl,\n        max,\n      }\n    }\n  })\n  ],\n  providers: [{\n    provide: APP_PIPE,\n    useValue: new ValidationPipe(validationPipeOptions)\n  }]\n})\nexport class AppConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppConfigModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nVersioningModule\n\nVersioningModule\n\nAppModule -->\n\nVersioningModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            TasksModule\n                        \n                        \n                            UsersModule\n                        \n                        \n                            VersioningModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AppConfigModule } from './configuration/app/app.config.module';\nimport { DatabaseModule } from './database/database.module';\nimport { UsersModule } from './users/users.module';\nimport { TasksModule } from './tasks/tasks.module';\n\nimport { VersioningModule } from './versioning/versioning.module';\n\n\n@Module({\n  imports: [AppConfigModule, DatabaseModule, UsersModule, TasksModule, VersioningModule],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseTodoDto.html":{"url":"classes/BaseTodoDto.html","title":"class - BaseTodoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseTodoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/base-todo.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                duDate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                priority\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                user\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                versions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description of the task to perform', required: true, example: 'Buy milk, eggs, and bread from the supermarket.'})@ApiProperty({description: 'describe the task to perform', required: true})@IsNonEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/dto/base-todo.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        duDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Due date for the todo item', required: false, type: Date, example: '2023-12-31T23:59:59.000Z'})@IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/dto/base-todo.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskPriority\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Priority level of the todo item', required: false, enum: TaskPriority, example: undefined})@IsOptional()@IsEnum(TaskPriority)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/dto/base-todo.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Status of the todo item', required: false, example: undefined})@IsOptional()@IsEnum(TaskStatus)@ApiProperty({description: 'status', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/dto/base-todo.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Todo title', required: true, example: 'Buy groceries'})@ApiProperty({description: 'Todo title', required: true})@IsNonEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/dto/base-todo.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseUserDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User associated with the todo item', type: BaseUserDto, required: true})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/dto/base-todo.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                        versions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TodoVersionBaseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of versions for the todo item', type: undefined, required: false})@IsOptional()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/dto/base-todo.dto.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNonEmptyString } from \"../../common/decorators/is-non-empty-string\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEnum, IsOptional, ValidateNested } from \"class-validator\";\nimport { Type } from \"class-transformer\";\nimport { BaseUserDto } from \"../../users/dto/base-user.dto\";\nimport { TaskPriority, TaskStatus } from \"../enums/Task-enums\";\n\nimport { TodoVersionBaseDto } from \"../../versioning/dto/todo-version-base.dto\";\n\nexport class BaseTodoDto{\n  @ApiProperty({\n    description: \"Todo title\",\n    required: true,\n    example: \"Buy groceries\",\n  })\n  @ApiProperty({description:\"Todo title\", required:true})\n  @IsNonEmptyString()\n  readonly title:string;\n  @ApiProperty({\n    description: \"Description of the task to perform\",\n    required: true,\n    example: \"Buy milk, eggs, and bread from the supermarket.\",\n  })\n  @ApiProperty({description:\"describe the task to perform\", required:true})\n  @IsNonEmptyString()\n  readonly description:string;\n\n  @ApiProperty({\n    description:\"Status of the todo item\",\n    required:false,\n    example: TaskStatus.IN_PROGRESS\n  })\n  @IsOptional()\n  @IsEnum(TaskStatus)\n  @ApiProperty({description:\"status\", required:false})\n  readonly status?:TaskStatus\n\n  @ApiProperty({\n    description: \"Due date for the todo item\",\n    required: false,\n    type: Date,\n    example: \"2023-12-31T23:59:59.000Z\",\n  })\n  @IsOptional()\n  @Type(() => Date)\n  readonly duDate?:Date\n\n  @ApiProperty({\n    description:\"Priority level of the todo item\",\n    required:false,\n    enum:TaskPriority,\n    example:TaskPriority.LOW\n  })\n  @IsOptional()\n  @IsEnum(TaskPriority)\n  readonly priority?:TaskPriority\n\n  @ApiProperty({\n    description:\"User associated with the todo item\",\n    type: BaseUserDto,\n    required:true,\n  })\n  @ValidateNested()\n  @Type(() => BaseUserDto)\n readonly user:BaseUserDto;\n\n  @ApiProperty({\n    description:\"List of versions for the todo item\",\n    type: [TodoVersionBaseDto],\n    required:false})\n  @IsOptional()\n  @ValidateNested({each:true})\n  @Type(() => TodoVersionBaseDto )\n readonly versions:TodoVersionBaseDto[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseUserDto.html":{"url":"classes/BaseUserDto.html","title":"class - BaseUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/base-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    Readonly\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                profileName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                todos\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/base-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNonEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/base-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        profileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unique Profile name. When provided, user can be found by profileName', required: false, example: 'DTrump'})@IsOptional()@IsNonEmptyString({})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/base-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of Todo items for the user', required: false, type: undefined})@IsOptional()@Type(undefined)@ValidateNested({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/base-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNonEmptyString } from \"../../common/decorators/is-non-empty-string\";\nimport { IsEmail, IsNotEmpty, IsOptional, ValidateNested } from \"class-validator\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { Todo } from \"../../tasks/entities/task.entity\";\n\nexport class BaseUserDto{\n @IsNonEmptyString()\n  readonly name:string\n  @IsEmail()\n  @IsNotEmpty()\n readonly email:string\n\n @ApiProperty({\n  description: \"Unique Profile name. When provided, user can be found by profileName\",\n  required: false,\n  example: \"DTrump\"\n })\n @IsOptional()\n @IsNonEmptyString({})\n readonly profileName?:string\n\n\n @ApiProperty({\n  description: \"List of Todo items for the user\",\n  required: false,\n  type:[Todo]\n })\n @IsOptional()\n @Type(() => Todo)\n @ValidateNested({each:true})\n todos?:Todo[];\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTodoDto.html":{"url":"classes/CreateTodoDto.html","title":"class - CreateTodoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTodoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/create-todo.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseTodoDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                duDate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                priority\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                user\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                versions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description of the task to perform', required: true, example: 'Buy milk, eggs, and bread from the supermarket.'})@ApiProperty({description: 'describe the task to perform', required: true})@IsNonEmptyString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseTodoDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseTodoDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        duDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Due date for the todo item', required: false, type: Date, example: '2023-12-31T23:59:59.000Z'})@IsOptional()@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseTodoDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseTodoDto:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskPriority\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Priority level of the todo item', required: false, enum: TaskPriority, example: undefined})@IsOptional()@IsEnum(TaskPriority)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseTodoDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseTodoDto:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Status of the todo item', required: false, example: undefined})@IsOptional()@IsEnum(TaskStatus)@ApiProperty({description: 'status', required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseTodoDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseTodoDto:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Todo title', required: true, example: 'Buy groceries'})@ApiProperty({description: 'Todo title', required: true})@IsNonEmptyString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseTodoDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseTodoDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseUserDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User associated with the todo item', type: BaseUserDto, required: true})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseTodoDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseTodoDto:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                        versions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TodoVersionBaseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of versions for the todo item', type: undefined, required: false})@IsOptional()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseTodoDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseTodoDto:74\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseTodoDto } from \"./base-todo.dto\";\n\nexport class CreateTodoDto extends BaseTodoDto{}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseUserDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    Readonly\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                profileName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                todos\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword({minLength: 8, minLowercase: 1, minUppercase: 1, minNumbers: 1, minSymbols: 1}, {message: 'Password must be at least 8 characters long and include uppercase, lowercase, number, and special character. Example: PassWord@201'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseUserDto:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNonEmptyString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseUserDto:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        profileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unique Profile name. When provided, user can be found by profileName', required: false, example: 'DTrump'})@IsOptional()@IsNonEmptyString({})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseUserDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of Todo items for the user', required: false, type: undefined})@IsOptional()@Type(undefined)@ValidateNested({each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseUserDto:32\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseUserDto } from \"./base-user.dto\";\nimport { IsStrongPassword } from \"class-validator\";\n\nexport class CreateUserDto extends BaseUserDto{\n  @IsStrongPassword(\n    {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minNumbers: 1,\n      minSymbols: 1,\n    },\n    {\n      message: 'Password must be at least 8 characters long and include uppercase, lowercase, number, and special character. Example: PassWord@201',\n    }\n  )\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { DatabaseConfig } from \"../configuration/db/database-config\";\nimport { validatedEnvVariables } from \"../validate-all-env/environmentValidation\";\n\n@Module({\n  imports:[ConfigModule.forRoot({\n    validate:validatedEnvVariables\n  }), TypeOrmModule.forRootAsync({\n    inject: [ConfigService],\n    imports: [ConfigModule],\n    useFactory: DatabaseConfig\n  })]\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentValidation.html":{"url":"classes/EnvironmentValidation.html","title":"class - EnvironmentValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validate-all-env/environmentValidation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                APP_CACHE_MAX\n                            \n                            \n                                    \n                                APP_CACHE_TTL\n                            \n                            \n                                    \n                                APP_PORT\n                            \n                            \n                                    \n                                APP_PREFIX\n                            \n                            \n                                    \n                                DATASOURCE_DATABASE\n                            \n                            \n                                    \n                                DATASOURCE_HOST\n                            \n                            \n                                    \n                                DATASOURCE_PASSWORD\n                            \n                            \n                                    \n                                DATASOURCE_PORT\n                            \n                            \n                                    \n                                DATASOURCE_USERNAME\n                            \n                            \n                                    \n                                SWAGGER_DESCRIPTION\n                            \n                            \n                                    \n                                SWAGGER_LICENCE\n                            \n                            \n                                    \n                                SWAGGER_LICENCE_URL\n                            \n                            \n                                    \n                                SWAGGER_TITLE\n                            \n                            \n                                    \n                                SWAGGER_VERSION\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        APP_CACHE_MAX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @isNonEmptyPositiveNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/validate-all-env/environmentValidation.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        APP_CACHE_TTL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @isNonEmptyPositiveNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/validate-all-env/environmentValidation.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        APP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @isNonEmptyPositiveNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/validate-all-env/environmentValidation.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        APP_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNonEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/validate-all-env/environmentValidation.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_DATABASE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNonEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/validate-all-env/environmentValidation.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNonEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/validate-all-env/environmentValidation.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNonEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/validate-all-env/environmentValidation.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @isNonEmptyPositiveNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/validate-all-env/environmentValidation.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_USERNAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNonEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/validate-all-env/environmentValidation.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        SWAGGER_DESCRIPTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNonEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/validate-all-env/environmentValidation.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        SWAGGER_LICENCE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNonEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/validate-all-env/environmentValidation.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        SWAGGER_LICENCE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNonEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/validate-all-env/environmentValidation.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        SWAGGER_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNonEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/validate-all-env/environmentValidation.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        SWAGGER_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNonEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/validate-all-env/environmentValidation.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { plainToInstance } from \"class-transformer\";\nimport { validateSync } from \"class-validator\";\nimport { InternalServerErrorException } from \"@nestjs/common\";\nimport { IsNonEmptyString } from \"../common/decorators/is-non-empty-string\";\nimport { isNonEmptyPositiveNumber } from \"../common/decorators/is-non-empty-positive.int\";\n\n\nexport class EnvironmentValidation {\n\n // ! **** database env **********/\n  @IsNonEmptyString()\n  DATASOURCE_USERNAME:string\n  @IsNonEmptyString()\n  DATASOURCE_PASSWORD:string\n  @IsNonEmptyString()\n  DATASOURCE_DATABASE:string\n  @IsNonEmptyString()\n  DATASOURCE_HOST:string\n  @isNonEmptyPositiveNumber()\n  DATASOURCE_PORT:number\n\n  //? **** Swagger env **********/\n  @IsNonEmptyString()\n  SWAGGER_VERSION:string\n  @IsNonEmptyString()\n  SWAGGER_LICENCE:string\n  @IsNonEmptyString()\n  SWAGGER_LICENCE_URL:string\n  @IsNonEmptyString()\n  SWAGGER_DESCRIPTION:string\n  @IsNonEmptyString()\n  SWAGGER_TITLE:string\n\n\n  //* **** App env **********/\n  @isNonEmptyPositiveNumber()\n  APP_CACHE_TTL:number\n  @isNonEmptyPositiveNumber()\n  APP_CACHE_MAX:number\n  @isNonEmptyPositiveNumber()\n  APP_PORT:number\n  @IsNonEmptyString()\n  APP_PREFIX:string\n\n\n}\n\nexport function validatedEnvVariables(config: Record) {\n  const validatedConfig = plainToInstance(EnvironmentValidation, config, {\n    enableImplicitConversion:true\n  });\n\n  const errors = validateSync(validatedConfig,{\n    skipMissingProperties:false\n  })\n\n  if(errors.length >0) {\n    throw new InternalServerErrorException(`‼️ ${ errors.length } variables failed  environment validation steps. read the log: ${errors.toString()}`)\n  }\n\n  console.log(\n    \"********************************************************************\\n\" +\n    \"All the environment variables have successfully been validated! ✅\" +\"\\n\" +\n    \"********************************************************************\"\n\n  );\n\n  return validatedConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenericPublicBaseDto.html":{"url":"classes/GenericPublicBaseDto.html","title":"class - GenericPublicBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenericPublicBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/generic-public-base.dto.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statusCode: number, message: string, data: T)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/dto/generic-public-base.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GenericPublicBaseDto {\n // statusCode:number\n // message:string\n  //data:T\n\n  constructor(private statusCode:number=200,private message:string= \"Success\",private data: T = null) {\n    this.statusCode = statusCode\n    this.message = message\n    this.data = data\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdDto.html":{"url":"classes/IdDto.html","title":"class - IdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/id-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @isNonEmptyPositiveNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/id-dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { isNonEmptyPositiveNumber } from \"../decorators/is-non-empty-positive.int\";\n\nexport class IdDto{\n  @isNonEmptyPositiveNumber()\n  id:number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PublicTodoDto.html":{"url":"classes/PublicTodoDto.html","title":"class - PublicTodoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PublicTodoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/public-to.dto.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/dto/public-to.dto.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PublicTodoDto {\n\n  constructor(private partial: Partial) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReadTodoController.html":{"url":"controllers/ReadTodoController.html","title":"controller - ReadTodoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReadTodoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/read-op/read-todo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                read/todos/\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                allTodos\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                todoById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        allTodos\n                        \n                    \n                \n            \n            \n                \n                        \n                    allTodos(query: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({})@ApiOperation({summary: 'Get all todos', description: 'Fetches a list of all Todo items from the database or return an Empty List if not found.'})@ApiResponse({status: 200, description: 'The Todo List has been successfully retrieved.', type: undefined})@ApiResponse({status: 404, description: 'Todo item not found.'})\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/read-op/read-todo.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        todoById\n                        \n                    \n                \n            \n            \n                \n                        \n                    todoById(undefined: IdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiResponse({status: 200, description: 'The Todo item has been successfully retrieved.', type: Todo})@ApiResponse({status: 404, description: 'Todo item not found.'})@ApiOperation({summary: ' Return the Todo items with the provided id.', description: 'Fetches the item from the database or return null if not found.'})\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/read-op/read-todo.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from \"@nestjs/common\";\nimport { ReadTodoService } from \"./read-todo.service\";\nimport { ApiOperation, ApiResponse, ApiTags } from \"@nestjs/swagger\";\nimport { Todo } from \"../entities/task.entity\";\nimport { IdDto } from \"../../common/dtos/id-dto\";\n\n@ApiTags(\"Todo - read operation\")\n@Controller('read/todos/')\nexport class ReadTodoController {\n\n  constructor(private readonly readTaskService: ReadTodoService) {}\n\n  @Get()\n  @ApiResponse({})\n  @ApiOperation({\n    summary: \"Get all todos\",\n    description: \"Fetches a list of all Todo items from the database or return an Empty List if not found.\",\n  })\n  @ApiResponse({ status: 200, description: 'The Todo List has been successfully retrieved.', type: [Todo] })\n  @ApiResponse({ status: 404, description: 'Todo item not found.' })\n  allTodos(@Query() query: any) {\n   const {limit, offset} = query\n   console.log(`Limit!${limit} | offset: ${offset}`);\n    return this.readTaskService.getAllTasks()\n  }\n\n  @Get(\":id\")\n  @ApiResponse({ status: 200, description: 'The Todo item has been successfully retrieved.', type: Todo })\n  @ApiResponse({ status: 404, description: 'Todo item not found.' })\n  @ApiOperation({\n    summary: \" Return the Todo items with the provided id.\",\n    description: \"Fetches the item from the database or return null if not found.\"\n  })\n  todoById(@Param() { id }: IdDto) {\n    return \"This handler returns task with id \" + id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReadTodoService.html":{"url":"injectables/ReadTodoService.html","title":"injectable - ReadTodoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReadTodoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/read-op/read-todo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllTasks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTasks\n                        \n                    \n                \n            \n            \n                \ngetAllTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/tasks/read-op/read-todo.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ReadTodoService {\n\n\n  getAllTasks(){\n    return \"This service return all the task\"\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReadUsersController.html":{"url":"controllers/ReadUsersController.html","title":"controller - ReadUsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReadUsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/read-op/read-users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/read-op/read-users.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/read-op/read-users.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/read-op/read-users.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/read-op/read-users.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/read-op/read-users.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ReadUsersService } from './read-users.service';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { UpdateUserDto } from '../dto/update-user.dto';\n\n@Controller('users')\nexport class ReadUsersController {\n  constructor(private readonly usersService: ReadUsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReadUsersService.html":{"url":"injectables/ReadUsersService.html","title":"injectable - ReadUsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReadUsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/read-op/read-users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/read-op/read-users.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/read-op/read-users.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/read-op/read-users.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/read-op/read-users.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/read-op/read-users.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { UpdateUserDto } from '../dto/update-user.dto';\n\n@Injectable()\nexport class ReadUsersService {\n  create(createUserDto: CreateUserDto) {\n    return 'This action adds a new user';\n  }\n\n  findAll() {\n    return `This action returns all users`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegistryDate.html":{"url":"classes/RegistryDate.html","title":"class - RegistryDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegistryDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/embedded/registry-date.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/embedded/registry-date.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/embedded/registry-date.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateDateColumn, UpdateDateColumn } from \"typeorm\";\n\nexport class RegistryDate{\n  @CreateDateColumn()\n  createdAt: Date;\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nReadTodoService\n\nReadTodoService\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nReadTodoService->TasksModule\n\n\n\n\n\nWriteTodoService\n\nWriteTodoService\n\nTasksModule -->\n\nWriteTodoService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReadTodoService\n                        \n                        \n                            WriteTodoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WriteTodoController\n                        \n                        \n                            ReadTodoController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { WriteTodoService } from './write-op/write-todo.service';\nimport { WriteTodoController } from './write-op/write-todo.controller';\nimport { ReadTodoService } from './read-op/read-todo.service';\nimport { ReadTodoController } from './read-op/read-todo.controller';\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { Todo } from \"./entities/task.entity\";\n\n@Module({\n  imports:[TypeOrmModule.forFeature([Todo])],\n  controllers: [WriteTodoController, ReadTodoController],\n  providers: [WriteTodoService, ReadTodoService],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Todo.html":{"url":"entities/Todo.html","title":"entity - Todo","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/entities/task.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    Optional\n                                dueDate\n                            \n                            \n                                    \n                                identifier\n                            \n                            \n                                    \n                                    Optional\n                                priority\n                            \n                            \n                                    \n                                registry\n                            \n                            \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                versions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/entities/task.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/entities/task.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        identifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/entities/task.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskPriority\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: TaskPriority, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/entities/task.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegistryDate\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(undefined, {prefix: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/entities/task.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: TaskStatus, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/entities/task.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/entities/task.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, user => user.todos)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/entities/task.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        versions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TodoVersion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, version => version.todo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/entities/task.entity.ts:39\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  AfterInsert,\n  AfterLoad,\n  AfterUpdate,\n  Column,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { RegistryDate } from \"../../common/embedded/registry-date\";\nimport { TaskPriority, TaskStatus } from \"../enums/Task-enums\";\nimport { TodoVersion } from \"../../versioning/entity/task-version.entity\";\nimport { User } from \"../../users/entities/user.entity\";\n\n\n\n\n@Entity('todo')\nexport class Todo {\n  @PrimaryGeneratedColumn()\n  identifier: number;\n  @Column({ type: 'varchar', length: 255 })\n  title: string;\n  @Column()\n  description: string;\n\n  @Column({ type:\"enum\",enum:TaskStatus,default:TaskStatus.NOT_STARTED,nullable: true })\n  status?: TaskStatus;\n\n\n  @Column({ nullable: true })\n  dueDate?: Date;\n\n  @Column({ type: 'enum', enum: TaskPriority, nullable: true, default:TaskPriority.LOW })\n  priority?: TaskPriority;\n\n\n  @OneToMany(() => TodoVersion, (version) => version.todo)\n  versions: TodoVersion[];\n\n  @OneToMany( ()=> User, (user) => user.todos)\n  user:User\n\n  @Column(() => RegistryDate,{prefix:false})\n  registry:RegistryDate\n\n  @AfterLoad()\n  afterLoad(){\n    console.log(`Entity ${this.title} Loaded on memory`);\n  }\n\n  @AfterUpdate()\n  afterUpdate(){\n    console.log(`Entity ${this.title} updated `);\n  }\n\n  @AfterInsert()\n  afterInsert(){\n    console.log(`Entity ${this.title} Inserted `);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TodoVersion.html":{"url":"entities/TodoVersion.html","title":"entity - TodoVersion","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TodoVersion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/versioning/entity/task-version.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                todo\n                            \n                            \n                                    \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/versioning/entity/task-version.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'json'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/versioning/entity/task-version.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/versioning/entity/task-version.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        todo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, todo => todo.versions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/versioning/entity/task-version.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/versioning/entity/task-version.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  AfterInsert,\n  AfterLoad,\n  AfterUpdate,\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { Todo } from \"../../tasks/entities/task.entity\";\n\n\n@Entity(\"Tasks-version\")\nexport class TodoVersion {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  version: number;\n\n  @Column({ type: 'json' })\n  data: Partial;\n\n  @ManyToOne(() => Todo, (todo) => todo.versions)\n  todo: Todo;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @AfterLoad()\n  afterLoad(){\n    console.log(`Entity version ${this.version} Loaded on memory`);\n  }\n\n  @AfterUpdate()\n  afterUpdate(){\n    console.log(`Entity  version ${this.version} updated `);\n  }\n\n  @AfterInsert()\n  afterInsert(){\n    console.log(`Entity version ${this.version} Inserted `);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TodoVersionBaseDto.html":{"url":"classes/TodoVersionBaseDto.html","title":"class - TodoVersionBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TodoVersionBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/versioning/dto/todo-version-base.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TodoVersionBaseDto{}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTodoDto.html":{"url":"classes/UpdateTodoDto.html","title":"class - UpdateTodoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTodoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/update-todo.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(BaseTodoDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { BaseTodoDto } from \"./base-todo.dto\";\n\nexport class UpdateTodoDto extends PartialType(BaseTodoDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(BaseUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { BaseUserDto } from \"./base-user.dto\";\n\nexport class UpdateUserDto extends PartialType(BaseUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                profileName\n                            \n                            \n                                    \n                                registry\n                            \n                            \n                                    \n                                todos\n                            \n                            \n                                    \n                                UserId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        profileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegistryDate\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(undefined, {prefix: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, todo => todo.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        UserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Todo } from \"../../tasks/entities/task.entity\";\nimport { AfterInsert, AfterLoad, AfterUpdate, Column, Entity, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\nimport { RegistryDate } from \"../../common/embedded/registry-date\";\n\n@Entity(\"users\")\nexport class User {\n  @PrimaryGeneratedColumn()\n  UserId:number\n  @Column()\n  name:string\n\n  @Column({nullable:false,unique:true})\n  email:string\n\n  @Column({nullable:false})\n  password:string\n\n  @Column({unique:true,nullable:true})\n  profileName:string\n\n  @ManyToOne(() => Todo, (todo) => todo.user)\n  todos:Todo[]\n\n  @Column(() => RegistryDate, {prefix:false})\n  registry:RegistryDate\n\n  @AfterLoad()\n  afterLoad(){\n    console.log(`Entity ${this.name} Loaded on memory`);\n  }\n\n  @AfterUpdate()\n  afterUpdate(){\n    console.log(`Entity ${this.name} updated `);\n  }\n\n  @AfterInsert()\n  afterInsert(){\n    console.log(`Entity ${this.name} Inserted `);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nReadUsersService\n\nReadUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nReadUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReadUsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReadUsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReadUsersService } from './read-op/read-users.service';\nimport { ReadUsersController } from './read-op/read-users.controller';\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { User } from \"./entities/user.entity\";\n\n@Module({\n  imports:[TypeOrmModule.forFeature([User])],\n  controllers: [ReadUsersController],\n  providers: [ReadUsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VersioningModule.html":{"url":"modules/VersioningModule.html","title":"module - VersioningModule","body":"\n                   \n\n\n\n\n    Modules\n    VersioningModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/versioning/versioning.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { TodoVersion } from \"./entity/task-version.entity\";\n\n@Module({\n  imports:[TypeOrmModule.forFeature([TodoVersion])],\n})\nexport class VersioningModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VersioningService.html":{"url":"injectables/VersioningService.html","title":"injectable - VersioningService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VersioningService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/versioning/versioning.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(VersioningTodoRepository: Repository, TodoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/versioning/versioning.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        VersioningTodoRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        TodoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTask(id: number, updateData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/versioning/versioning.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { Todo } from \"../tasks/entities/task.entity\";\nimport { TodoVersion } from \"./entity/task-version.entity\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\n\n@Injectable()\nexport class VersioningService {\n\n  constructor(@InjectRepository(TodoVersion) private readonly VersioningTodoRepository: Repository,\n              @InjectRepository(Todo) private readonly TodoRepository: Repository,) {\n  }\n\n //! Managing Versions\n //? When you update a task, you can create a new version entry:\n// TODO: need to implement final version\n  async updateTask(id: number, updateData: Partial): Promise {\n    const todo = await this.TodoRepository.findOneBy({identifier:id})\n    if (!todo) {\n      throw new NotFoundException('Task not found');\n    }\n\n    // Create a new version\n    const newVersion = new TodoVersion();\n    newVersion.version = (todo.versions.length ? Math.max(...todo.versions.map(v => v.version)) : 0) + 1;\n\n\n    newVersion.data = updateData;\n    newVersion.todo = todo;\n\n    await this.VersioningTodoRepository.save(newVersion);\n\n    // Update the todo itself\n    Object.assign(todo, updateData);\n    return this.TodoRepository.save(todo);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WriteTodoController.html":{"url":"controllers/WriteTodoController.html","title":"controller - WriteTodoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WriteTodoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/write-op/write-todo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                write/todos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTodoDto: CreateTodoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.CREATED)@ApiOperation({summary: 'Create new todo', description: 'Create new todo item'})@ApiBody({description: 'The data needed to create a new todo', type: CreateTodoDto})@ApiResponse({status: undefined, description: 'The todo has ben successfully created', type: Todo})@ApiResponse({status: undefined, description: 'invalid data provided'})\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/write-op/write-todo.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createTodoDto\n                                            \n                                                            CreateTodoDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data needed to create a new todo.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The newly created todo item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/write-op/write-todo.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(undefined: IdDto, updateTaskDto: UpdateTodoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update a todo task', description: 'Update task item'})@ApiResponse({type: UpdateTodoDto, description: 'The todo has ben successfully updated', status: 200})@ApiResponse({description: 'No content haven been updated ', status: 204})@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/write-op/write-todo.controller.ts:77\n                        \n                    \n\n\n            \n                \n                        Update a todo task\nUpdate task item\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                updateTaskDto\n                                            \n                                                            UpdateTodoDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to update the todo task\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The result of the update operation\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Patch, Param, Delete, HttpStatus, HttpCode } from \"@nestjs/common\";\nimport { WriteTodoService } from './write-todo.service';\nimport { CreateTodoDto } from '../dto/create-todo.dto';\nimport { UpdateTodoDto } from '../dto/update-todo.dto';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from \"@nestjs/swagger\";\nimport { IdDto } from \"../../common/dtos/id-dto\";\nimport { Todo } from \"../entities/task.entity\";\n\n@ApiTags(\"Todo - write operation\")\n@Controller('write/todos')\nexport class WriteTodoController {\n  constructor(private readonly writeTodoService: WriteTodoService) {}\n\n\n\n  /**\n   * @summary Create a new todo item\n   * @description This endpoint allows the creation of a new todo item.\n   *\n   * @param {CreateTodoDto} createTodoDto - The data needed to create a new todo.\n   *\n   * @returns {Todo} The newly created todo item.\n   *\n   * @throws {HttpException} If invalid data is provided, an HTTP 400 Bad Request error is thrown.\n   *\n   * @decorator\n   * @Post()\n   * @HttpCode(HttpStatus.CREATED)\n   * @ApiOperation({ summary: \"Create new todo\", description: \"Create new todo item\" })\n   * @ApiBody({ description: \"The data needed to create a new todo\", type: CreateTodoDto })\n   * @ApiResponse({ status: HttpStatus.CREATED, description: 'The todo has been successfully created', type: Todo })\n   * @ApiResponse({ status: HttpStatus.BAD_REQUEST, description: 'Invalid data provided' })\n   */\n @Post()\n\n @HttpCode(HttpStatus.CREATED)\n @ApiOperation({\n   summary: \"Create new todo\",\n   description: \"Create new todo item\",\n })\n @ApiBody({\n   description: \"The data needed to create a new todo\",\n   type: CreateTodoDto,\n })\n @ApiResponse({\n   status: HttpStatus.CREATED,\n   description: 'The todo has ben successfully created',\n   type:Todo\n })\n @ApiResponse({\n   status: HttpStatus.BAD_REQUEST,\n   description: 'invalid data provided',\n\n })\n  async create(@Body() createTodoDto: CreateTodoDto):Promise {\n    return await this.writeTodoService.create(createTodoDto);\n }\n\n\n  /**\n   * Update a todo task\n   * Update task item\n   *\n   * @param {IdDto} id - The ID of the todo task to update\n   * @param {UpdateTodoDto} updateTaskDto - The data to update the todo task\n   *\n   * @returns {any} The result of the update operation\n   */\n @ApiOperation({\n   summary: \"Update a todo task\",\n   description: \"Update task item\",\n\n })\n @ApiResponse({type:UpdateTodoDto,description: \"The todo has ben successfully updated\", status:200})\n @ApiResponse({description: \"No content haven been updated \", status:204})\n  @Patch(':id')\n  async update(@Param() { id }: IdDto, @Body() updateTaskDto: UpdateTodoDto):Promise {\n    return await this.writeTodoService.update(id, updateTaskDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.writeTodoService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WriteTodoService.html":{"url":"injectables/WriteTodoService.html","title":"injectable - WriteTodoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WriteTodoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/write-op/write-todo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(todoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/write-op/write-todo.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTaskDto: CreateTodoDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tasks/write-op/write-todo.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTaskDto\n                                            \n                                                            CreateTodoDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tasks/write-op/write-todo.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateTaskDto: UpdateTodoDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tasks/write-op/write-todo.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTaskDto\n                                            \n                                                            UpdateTodoDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException, NotFoundException } from \"@nestjs/common\";\nimport { CreateTodoDto } from '../dto/create-todo.dto';\nimport { UpdateTodoDto } from '../dto/update-todo.dto';\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Todo } from \"../entities/task.entity\";\nimport { Repository } from \"typeorm\";\n\n@Injectable()\nexport class WriteTodoService {\n\n  constructor(@InjectRepository(Todo) private readonly todoRepository: Repository) {}\n  async create(createTaskDto: CreateTodoDto) {\n    const todo = this.todoRepository.create(createTaskDto);\n    try {\n      return await this.todoRepository.save(todo);\n    } catch (error) {\n      throw new InternalServerErrorException(`Error creating todo: ${error}`);\n    }\n\n  }\n\n\n\n  async update(id: number, updateTaskDto: UpdateTodoDto): Promise {\n    // Executes a SQL COUNT query, returns 0 if nothing is found\n    const todoCount: number = await this.todoRepository.count({where: {identifier: id}});\n\n    // If no todo is found, throw NotFoundException\n    if(todoCount === 0){\n      throw new NotFoundException(`Todo ${id} not found`);\n    }\n\n    // Try to preload the updated entity\n    const updatedTodo = await this.todoRepository.preload({\n      identifier:id,\n      ...updateTaskDto,\n    });\n\n    // If preload fails, throw NotFoundException\n    if(!updatedTodo) {\n      throw new NotFoundException(`Todo ${id} not found`);}\n\n    return await this.todoRepository.save(updatedTodo);\n\n  }\n\n  // Save and return the updated todo\n  remove(id: number) {\n    return `This action removes a #${id} task`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/common/decorators/is-non-empty-positive.int.ts\n            \n            function\n            isNonEmptyPositiveNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/is-non-empty-string.ts\n            \n            function\n            IsNonEmptyString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dtos/id-dto.ts\n            \n            class\n            IdDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/embedded/registry-date.ts\n            \n            class\n            RegistryDate\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/configuration/app/error-formater-pipe.ts\n            \n            variable\n            ErrorFormaterPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/configuration/app/error-formater-pipe.ts\n            \n            variable\n            validationPipeOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/db/database-config.ts\n            \n            variable\n            DatabaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger/env.swagger.ts\n            \n            variable\n            SWAGGER_DESCRIPTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger/env.swagger.ts\n            \n            variable\n            SWAGGER_LICENCE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger/env.swagger.ts\n            \n            variable\n            SWAGGER_LICENCE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger/env.swagger.ts\n            \n            variable\n            SWAGGER_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger/env.swagger.ts\n            \n            variable\n            SWAGGER_SERVER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger/env.swagger.ts\n            \n            variable\n            SWAGGER_TITLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger/env.swagger.ts\n            \n            variable\n            SWAGGER_VERSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger/swagger.document.ts\n            \n            variable\n            swaggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tasks/dto/base-todo.dto.ts\n            \n            class\n            BaseTodoDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/tasks/dto/create-todo.dto.ts\n            \n            class\n            CreateTodoDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/tasks/dto/generic-public-base.dto.ts\n            \n            class\n            GenericPublicBaseDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tasks/dto/public-to.dto.ts\n            \n            class\n            PublicTodoDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tasks/dto/update-todo.dto.ts\n            \n            class\n            UpdateTodoDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/entities/task.entity.ts\n            \n            entity\n            Todo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/read-op/read-todo.controller.ts\n            \n            controller\n            ReadTodoController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/read-op/read-todo.service.ts\n            \n            injectable\n            ReadTodoService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tasks/write-op/write-todo.controller.ts\n            \n            controller\n            WriteTodoController\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/tasks/write-op/write-todo.service.ts\n            \n            injectable\n            WriteTodoService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/base-user.dto.ts\n            \n            class\n            BaseUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/read-op/read-users.controller.ts\n            \n            controller\n            ReadUsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/read-op/read-users.service.ts\n            \n            injectable\n            ReadUsersService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/validate-all-env/environmentValidation.ts\n            \n            class\n            EnvironmentValidation\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/validate-all-env/environmentValidation.ts\n            \n            function\n            validatedEnvVariables\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/versioning/dto/todo-version-base.dto.ts\n            \n            class\n            TodoVersionBaseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/versioning/entity/task-version.entity.ts\n            \n            entity\n            TodoVersion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/versioning/versioning.service.ts\n            \n            injectable\n            VersioningService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.25\n        \n            @nestjs/cache-manager : ^2.2.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.0.5\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            cache-manager : 5\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            fork-ts-checker-webpack-plugin : ^9.0.2\n        \n            pg : ^8.13.0\n        \n            prettier-plugin-organize-imports : ^4.1.0\n        \n            reflect-metadata : ^0.2.0\n        \n            run-script-webpack-plugin : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            typeorm : ^0.3.20\n        \n            vercel : ^37.5.3\n        \n            webpack : ^5.94.0\n        \n            webpack-cli : ^5.1.4\n        \n            webpack-node-externals : ^3.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskPriority   (src/.../Task-enums.ts)\n                        \n                        \n                            TaskStatus   (src/.../Task-enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tasks/enums/Task-enums.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskPriority\n                    \n                \n                        \n                            \n                                 HIGH\n                            \n                        \n                        \n                            \n                                Value : High\n                            \n                        \n                        \n                            \n                                 medium\n                            \n                        \n                        \n                            \n                                Value : medium\n                            \n                        \n                        \n                            \n                                 LOW\n                            \n                        \n                        \n                            \n                                Value : low\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TaskStatus\n                    \n                \n                        \n                            \n                                 NOT_STARTED\n                            \n                        \n                        \n                            \n                                Value : Not started\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : Pending\n                            \n                        \n                        \n                            \n                                 TERMINATED\n                            \n                        \n                        \n                            \n                                Value : Terminated\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            isNonEmptyPositiveNumber   (src/.../is-non-empty-positive.int.ts)\n                        \n                        \n                            IsNonEmptyString   (src/.../is-non-empty-string.ts)\n                        \n                        \n                            validatedEnvVariables   (src/.../environmentValidation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/decorators/is-non-empty-positive.int.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isNonEmptyPositiveNumber\n                        \n                    \n                \n            \n            \n                \nisNonEmptyPositiveNumber(validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/decorators/is-non-empty-string.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsNonEmptyString\n                        \n                    \n                \n            \n            \n                \nIsNonEmptyString(validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/validate-all-env/environmentValidation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validatedEnvVariables\n                        \n                    \n                \n            \n            \n                \nvalidatedEnvVariables(config: Record)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProject description\n\n\nIn this project comes from roadma.sh.  I'm required to develop a RESTful API to allow users to manage their to-do list. The previous backend projects have only focused on the CRUD operations, but this project will require me to implement user authentication as well.\nImage illustration\nGoals\nSkills required for this project include:\n\n User authentication\n Schema design and Databases\n RESTful API design\n CRUD operations\n Error handling\n Security\n\nRequirements\nI'm required to develop a RESTful API with following endpoints\n\n User registration to create a new user\n Login endpoint to authenticate the user and generate a token\n CRUD operations for managing the to-do list\n Implement user authentication to allow only authorized users to access the to-do list\n Implement error handling and security measures\n Use a database to store the user and to-do list data (you can use any database of your choice)\n Implement proper data validation\n Implement pagination and filtering for the to-do list\n\nGiven below is a list of the endpoints and the details of the request and response:\nUser Registration\nRegister a new user using the following request:\nExample :POST /register\n{\n  \"name\": \"John Doe\",\n  \"email\": \"john@doe.com\"\n  \"password\": \"password\"\n}This will validate the given details, make sure the email is unique and store the user details in the database. Make sure to hash the password before storing it in the database. Respond with a token that can be used for authentication if the registration is successful.\nExample :{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n}The token can either be a JWT token or a random string that can be used for authentication. We leave it up to you to decide the implementation details.\nUser Login\nAuthenticate the user using the following request:\nExample :POST /login\n{\n  \"email\": \"john@doe.com\",\n  \"password\": \"password\"\n}This will validate the given email and password, and respond with a token if the authentication is successful.\nExample :POST /login\n{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n}Create a To-Do Item\nCreate a new to-do item using the following request:\nExample :POST /todos\n{\n  \"title\": \"Buy groceries\",\n  \"description\": \"Buy milk, eggs, and bread\"\n}User must send the token received from the login endpoint in the header to authenticate the request. You can use the Authorization header with the token as the value. In case the token is missing or invalid, respond with an error and status code 401.\nExample :{\n  \"message\": \"Unauthorized\"\n}Upon successful creation of the to-do item, respond with the details of the created item.\nExample :{\n  \"id\": 1,\n  \"title\": \"Buy groceries\",\n  \"description\": \"Buy milk, eggs, and bread\"\n}Update a To-Do Item\nUpdate an existing to-do item using the following request:\n[...] All the requirement are found here\nBonus\n\n Implement filtering and sorting for the to-do list\n Implement unit tests for the API\n Implement rate limiting and throttling for the API\n Implement refresh token mechanism for the authentication\n\n\n\n  \n\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCI / CD\n\nDev workflow\n\n\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2024 Jordach Makaya\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VersioningModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppConfigModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nVersioningModule\n\nVersioningModule\n\nAppModule -->\n\nVersioningModule->AppModule\n\n\n\n\n\nReadTodoService\n\nReadTodoService\n\nTasksModule -->\n\nReadTodoService->TasksModule\n\n\n\n\n\nWriteTodoService\n\nWriteTodoService\n\nTasksModule -->\n\nWriteTodoService->TasksModule\n\n\n\n\n\nReadUsersService\n\nReadUsersService\n\nUsersModule -->\n\nReadUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : NestJS Backend RESTful API to allow users to authenticate and manage their to-do list.\n        \n            License : MIT\n        \n            Author : Jordach MAKAYA\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DatabaseConfig   (src/.../database-config.ts)\n                        \n                        \n                            ErrorFormaterPipe   (src/.../error-formater-pipe.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            SWAGGER_DESCRIPTION   (src/.../env.swagger.ts)\n                        \n                        \n                            SWAGGER_LICENCE   (src/.../env.swagger.ts)\n                        \n                        \n                            SWAGGER_LICENCE_URL   (src/.../env.swagger.ts)\n                        \n                        \n                            SWAGGER_PATH   (src/.../env.swagger.ts)\n                        \n                        \n                            SWAGGER_SERVER   (src/.../env.swagger.ts)\n                        \n                        \n                            SWAGGER_TITLE   (src/.../env.swagger.ts)\n                        \n                        \n                            SWAGGER_VERSION   (src/.../env.swagger.ts)\n                        \n                        \n                            swaggerConfig   (src/.../swagger.document.ts)\n                        \n                        \n                            validationPipeOptions   (src/.../error-formater-pipe.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/configuration/db/database-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DatabaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (configService:ConfigService):Promise  => ({\n  type:\"postgres\",\n  host:configService.getOrThrow(\"DATASOURCE_HOST\"),\n  port:configService.getOrThrow(\"DATASOURCE_PORT\"),\n  database:configService.getOrThrow(\"DATASOURCE_DATABASE\"),\n  username:configService.getOrThrow(\"DATASOURCE_USERNAME\"),\n  password:configService.getOrThrow(\"DATASOURCE_PASSWORD\"),\n  entities:[User,Todo,TodoVersion],\n  synchronize:true, // Dev only\n  logging:false,\n\n})\n                    \n                \n\n\n        \n    \n\n    src/configuration/app/error-formater-pipe.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ErrorFormaterPipe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (errors: ValidationError[]): any => {\n  const formattedErrors =  errors.map((error) => ({\n    field: error.property,\n    issues: error.constraints ? Object.values(error.constraints) : []\n  }))\n  return new BadRequestException({\n    message: \"Input Validation failed\",\n    errors: formattedErrors,\n  })\n}\n                    \n                \n\n            \n                \n                    Formats validation errors into a structured format for a BadRequestException.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationPipeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationPipeOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  whitelist: true,\n  transform: true,\n  forbidNonWhitelisted: true,\n  transformOptions: {\n    enableImplicitConversion: true,\n  },\n  exceptionFactory: ErrorFormaterPipe, // Make sure ErrorFormatter is imported if necessary\n}\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    TypeScript's Awareness:A declaration for a constant named module with a type of any.\nBy default, TypeScript doesn't recognize Webpack's injected module properties because\nthey are not part of the standard Node.js or TypeScript definitions.\nWithout this declaration, TypeScript would throw errors when you attempt to access module.hot\nor other HMR-related properties.\n\n                \n            \n\n        \n    \n\n    src/configuration/swagger/env.swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SWAGGER_DESCRIPTION\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env['SWAGGER_DESCRIPTION']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SWAGGER_LICENCE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env['SWAGGER_LICENCE']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SWAGGER_LICENCE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env['SWAGGER_LICENCE_URL']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SWAGGER_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env['SWAGGER_PATH']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SWAGGER_SERVER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env['SWAGGER_SERVER']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SWAGGER_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env['SWAGGER_TITLE']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SWAGGER_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env['SWAGGER_VERSION']\n                    \n                \n\n\n        \n    \n\n    src/configuration/swagger/swagger.document.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        swaggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n  .setTitle(SWAGGER_TITLE)\n  .setDescription(SWAGGER_DESCRIPTION)\n  .addServer(SWAGGER_SERVER)\n  .setLicense(SWAGGER_LICENCE, SWAGGER_LICENCE_URL)\n  .setVersion(SWAGGER_VERSION)\n  .build()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
